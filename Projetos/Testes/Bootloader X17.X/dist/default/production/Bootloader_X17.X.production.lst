

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Sep 25 10:36:06 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	dabs	1,0x1,1,_EE_Key_2
    36  0000                     
    37                           ; Version 1.43
    38                           ; Generated 25/07/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46K22 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	intcode_body
    73  000246                     __pintcode_body:
    74                           	opt stack 0
    75  0000                     _PLLRDY	set	32407
    76  0000                     _LATE	set	3981
    77  0000                     _LATD	set	3980
    78  0000                     _LATA	set	3977
    79  0000                     _LATB	set	3978
    80  0000                     _LATC	set	3979
    81  0000                     _TRISE	set	3990
    82  0000                     _TRISA	set	3986
    83  0000                     _TRISB	set	3987
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISD	set	3989
    86  0000                     _WPUB	set	3937
    87  0000                     _INTCON2bits	set	4081
    88  0000                     _BAUDCON1	set	4024
    89  0000                     _RCSTA1	set	4011
    90  0000                     _TXSTA1	set	4012
    91  0000                     _SPBRG1	set	4015
    92  0000                     _SPBRGH1	set	4016
    93  0000                     _PIR1bits	set	3998
    94  0000                     _RCSTA1bits	set	4011
    95  0000                     _RCREG1	set	4014
    96  0000                     _TXREG1	set	4013
    97  0000                     _TBLPTRU	set	4088
    98  0000                     _TBLPTRH	set	4087
    99  0000                     _TBLPTRL	set	4086
   100  0000                     _TABLAT	set	4085
   101  0000                     _INTCONbits	set	4082
   102  0000                     _EECON1bits	set	4006
   103  0000                     _EECON2	set	4007
   104  0000                     _EEADRH	set	4010
   105  0000                     _EEADR	set	4009
   106  0000                     _EEDATA	set	4008
   107  0000                     _PIR2bits	set	4001
   108  0000                     _OSCCON	set	4051
   109  0000                     _OSCCON2	set	4050
   110  0000                     _OSCTUNE	set	3995
   111  0000                     _STKPTR	set	4092
   112  0000                     _EECON1	set	4006
   113  0000                     _TXSTA1bits	set	4012
   114  0000                     _BAUDCONbits	set	4024
   115  0000                     _RCREG	set	4014
   116  0000                     _TBLPTR	set	4086
   117  0000                     _ANSELC	set	3898
   118  0000                     _ANSELB	set	3897
   119  0000                     _ANSELD	set	3899
   120  0000                     _ANSELE	set	3900
   121  0000                     _ANSELA	set	3896
   122  0000                     
   123                           ; #config settings
   124  000246                     int_func:
   125                           	opt stack 23
   126  000246  CFFA F002          	movff	pclath,??_service_isr_high
   127  00024A  CFFB F003          	movff	pclatu,??_service_isr_high+1
   128  00024E  CFE9 F004          	movff	fsr0l,??_service_isr_high+2
   129  000252  CFEA F005          	movff	fsr0h,??_service_isr_high+3
   130  000256  CFE1 F006          	movff	fsr1l,??_service_isr_high+4
   131  00025A  CFE2 F007          	movff	fsr1h,??_service_isr_high+5
   132  00025E  CFD9 F008          	movff	fsr2l,??_service_isr_high+6
   133  000262  CFDA F009          	movff	fsr2h,??_service_isr_high+7
   134  000266  CFF3 F00A          	movff	prodl,??_service_isr_high+8
   135  00026A  CFF4 F00B          	movff	prodh,??_service_isr_high+9
   136  00026E  CFF6 F00C          	movff	tblptrl,??_service_isr_high+10
   137  000272  CFF7 F00D          	movff	tblptrh,??_service_isr_high+11
   138  000276  CFF8 F00E          	movff	tblptru,??_service_isr_high+12
   139  00027A  CFF5 F00F          	movff	tablat,??_service_isr_high+13
   140  00027E  C039  F010         	movff	btemp,??_service_isr_high+14
   141  000282  C03A  F011         	movff	btemp+1,??_service_isr_high+15
   142  000286  C03B  F012         	movff	btemp+2,??_service_isr_high+16
   143  00028A  C03C  F013         	movff	btemp+3,??_service_isr_high+17
   144  00028E  EF0C F004          	goto	2072	;# 
   145  000292  C013  F03C         	movff	??_service_isr_high+17,btemp+3
   146  000296  C012  F03B         	movff	??_service_isr_high+16,btemp+2
   147  00029A  C011  F03A         	movff	??_service_isr_high+15,btemp+1
   148  00029E  C010  F039         	movff	??_service_isr_high+14,btemp
   149  0002A2  C00F  FFF5         	movff	??_service_isr_high+13,tablat
   150  0002A6  C00E  FFF8         	movff	??_service_isr_high+12,tblptru
   151  0002AA  C00D  FFF7         	movff	??_service_isr_high+11,tblptrh
   152  0002AE  C00C  FFF6         	movff	??_service_isr_high+10,tblptrl
   153  0002B2  C00B  FFF4         	movff	??_service_isr_high+9,prodh
   154  0002B6  C00A  FFF3         	movff	??_service_isr_high+8,prodl
   155  0002BA  C009  FFDA         	movff	??_service_isr_high+7,fsr2h
   156  0002BE  C008  FFD9         	movff	??_service_isr_high+6,fsr2l
   157  0002C2  C007  FFE2         	movff	??_service_isr_high+5,fsr1h
   158  0002C6  C006  FFE1         	movff	??_service_isr_high+4,fsr1l
   159  0002CA  C005  FFEA         	movff	??_service_isr_high+3,fsr0h
   160  0002CE  C004  FFE9         	movff	??_service_isr_high+2,fsr0l
   161  0002D2  C003  FFFB         	movff	??_service_isr_high+1,pclatu
   162  0002D6  C002  FFFA         	movff	??_service_isr_high,pclath
   163  0002DA  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   164  0002DC  0011               	retfie		f
   165  0002DE                     __end_of_service_isr_high:
   166                           	opt stack 0
   167  0000                     pclatu	equ	0xFFB
   168                           pclath	equ	0xFFA
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           prodh	equ	0xFF4
   174                           prodl	equ	0xFF3
   175                           fsr0h	equ	0xFEA
   176                           fsr0l	equ	0xFE9
   177                           fsr1h	equ	0xFE2
   178                           fsr1l	equ	0xFE1
   179                           fsr2h	equ	0xFDA
   180                           fsr2l	equ	0xFD9
   181                           
   182                           	psect	cinit
   183  0005B2                     __pcinit:
   184                           	opt stack 0
   185  0005B2                     start_initialization:
   186                           	opt stack 0
   187  0005B2                     __initialization:
   188                           	opt stack 0
   189                           
   190                           ; Clear objects allocated to BANK0 (73 bytes)
   191  0005B2  EE00  F060         	lfsr	0,__pbssBANK0
   192  0005B6  0E49               	movlw	73
   193  0005B8                     clear_0:
   194  0005B8  6AEE               	clrf	postinc0,c
   195  0005BA  06E8               	decf	wreg,f,c
   196  0005BC  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to COMRAM (8 bytes)
   199  0005BE  EE00  F031         	lfsr	0,__pbssCOMRAM
   200  0005C2  0E08               	movlw	8
   201  0005C4                     clear_1:
   202  0005C4  6AEE               	clrf	postinc0,c
   203  0005C6  06E8               	decf	wreg,f,c
   204  0005C8  E1FD               	bnz	clear_1
   205  0005CA                     end_of_initialization:
   206                           	opt stack 0
   207  0005CA                     __end_of__initialization:
   208                           	opt stack 0
   209  0005CA  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210  0005CC  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211  0005CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212  0005D0  6EF8               	movwf	tblptru,c
   213  0005D2  0100               	movlb	0
   214  0005D4  EF3D  F003         	goto	_main	;jump to C main() function
   215                           pclatu	equ	0xFFB
   216                           pclath	equ	0xFFA
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           prodh	equ	0xFF4
   222                           prodl	equ	0xFF3
   223                           postinc0	equ	0xFEE
   224                           fsr0h	equ	0xFEA
   225                           fsr0l	equ	0xFE9
   226                           wreg	equ	0xFE8
   227                           fsr1h	equ	0xFE2
   228                           fsr1l	equ	0xFE1
   229                           fsr2h	equ	0xFDA
   230                           fsr2l	equ	0xFD9
   231                           
   232                           	psect	bssCOMRAM
   233  000031                     __pbssCOMRAM:
   234                           	opt stack 0
   235  000031                     _counter:
   236                           	opt stack 0
   237  000031                     	ds	2
   238  000033                     _check_sum:
   239                           	opt stack 0
   240  000033                     	ds	2
   241  000035                     _reset_pending:
   242                           	opt stack 0
   243  000035                     	ds	1
   244  000036                     _tx_data:
   245                           	opt stack 0
   246  000036                     	ds	1
   247  000037                     _rx_data:
   248                           	opt stack 0
   249  000037                     	ds	1
   250  000038                     _data_length:
   251                           	opt stack 0
   252  000038                     	ds	1
   253                           pclatu	equ	0xFFB
   254                           pclath	equ	0xFFA
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           prodh	equ	0xFF4
   260                           prodl	equ	0xFF3
   261                           postinc0	equ	0xFEE
   262                           fsr0h	equ	0xFEA
   263                           fsr0l	equ	0xFE9
   264                           wreg	equ	0xFE8
   265                           fsr1h	equ	0xFE2
   266                           fsr1l	equ	0xFE1
   267                           fsr2h	equ	0xFDA
   268                           fsr2l	equ	0xFD9
   269                           
   270                           	psect	bssBANK0
   271  000060                     __pbssBANK0:
   272                           	opt stack 0
   273  000060                     _frame:
   274                           	opt stack 0
   275  000060                     	ds	73
   276                           pclatu	equ	0xFFB
   277                           pclath	equ	0xFFA
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           prodh	equ	0xFF4
   283                           prodl	equ	0xFF3
   284                           postinc0	equ	0xFEE
   285                           fsr0h	equ	0xFEA
   286                           fsr0l	equ	0xFE9
   287                           wreg	equ	0xFE8
   288                           fsr1h	equ	0xFE2
   289                           fsr1l	equ	0xFE1
   290                           fsr2h	equ	0xFDA
   291                           fsr2l	equ	0xFD9
   292                           
   293                           	psect	cstackBANK0
   294  0000A9                     __pcstackBANK0:
   295                           	opt stack 0
   296  0000A9                     Run_Bootloader@ch:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x0
   300  0000A9                     	ds	1
   301  0000AA                     Run_Bootloader@msg_length:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x1
   305  0000AA                     	ds	1
   306  0000AB                     Run_Bootloader@index:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x2
   310  0000AB                     	ds	1
   311                           pclatu	equ	0xFFB
   312                           pclath	equ	0xFFA
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           prodh	equ	0xFF4
   318                           prodl	equ	0xFF3
   319                           postinc0	equ	0xFEE
   320                           fsr0h	equ	0xFEA
   321                           fsr0l	equ	0xFE9
   322                           wreg	equ	0xFE8
   323                           fsr1h	equ	0xFE2
   324                           fsr1l	equ	0xFE1
   325                           fsr2h	equ	0xFDA
   326                           fsr2l	equ	0xFD9
   327                           
   328                           	psect	cstackCOMRAM
   329  000002                     __pcstackCOMRAM:
   330                           	opt stack 0
   331  000002                     ??_service_isr_high:
   332  000002                     
   333                           ; 1 bytes @ 0x0
   334  000002                     	ds	18
   335  000014                     ??_service_isr_low:
   336                           
   337                           ; 1 bytes @ 0x12
   338  000014                     	ds	21
   339  000029                     ??_Write_Flash:
   340  000029                     ??_Read_Config:
   341  000029                     ??_Write_Config:
   342  000029                     EUSART1_Write@txData:
   343                           	opt stack 0
   344  000029                     Get_Version_Data@i:
   345                           	opt stack 0
   346  000029                     Erase_Flash@i:
   347                           	opt stack 0
   348  000029                     Calc_Checksum@i:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x27
   352  000029                     	ds	2
   353  00002B                     Read_Config@i:
   354                           	opt stack 0
   355  00002B                     Write_Config@i:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x29
   359  00002B                     	ds	4
   360  00002F                     Write_Flash@i:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x2D
   364  00002F                     	ds	1
   365  000030                     ProcessBootBuffer@len:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x2E
   369  000030                     	ds	1
   370  000031                     pclatu	equ	0xFFB
   371                           pclath	equ	0xFFA
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           prodh	equ	0xFF4
   377                           prodl	equ	0xFF3
   378                           postinc0	equ	0xFEE
   379                           fsr0h	equ	0xFEA
   380                           fsr0l	equ	0xFE9
   381                           wreg	equ	0xFE8
   382                           fsr1h	equ	0xFE2
   383                           fsr1l	equ	0xFE1
   384                           fsr2h	equ	0xFDA
   385                           fsr2l	equ	0xFD9
   386                           
   387                           ; 1 bytes @ 0x2F
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 51 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels required when called:    8
   413 ;; This function calls:
   414 ;;		_SYSTEM_Initialize
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text0
   421  00067A                     __ptext0:
   422                           	opt stack 0
   423  00067A                     _main:
   424                           	opt stack 23
   425                           
   426                           ;main.c: 54: SYSTEM_Initialize();
   427                           
   428                           ;incstack = 0
   429  00067A  EC12  F003         	call	_SYSTEM_Initialize	;wreg free
   430  00067E                     l341:
   431                           
   432                           ;main.c: 85: {
   433  00067E  D7FF               	goto	l341
   434  000680                     __end_of_main:
   435                           	opt stack 0
   436                           pclatu	equ	0xFFB
   437                           pclath	equ	0xFFA
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           prodh	equ	0xFF4
   443                           prodl	equ	0xFF3
   444                           postinc0	equ	0xFEE
   445                           fsr0h	equ	0xFEA
   446                           fsr0l	equ	0xFE9
   447                           wreg	equ	0xFE8
   448                           fsr1h	equ	0xFE2
   449                           fsr1l	equ	0xFE1
   450                           fsr2h	equ	0xFDA
   451                           fsr2l	equ	0xFD9
   452                           
   453 ;; *************** function _SYSTEM_Initialize *****************
   454 ;; Defined at:
   455 ;;		line 111 in file "mcc_generated_files/mcc.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    7
   476 ;; This function calls:
   477 ;;		_BOOTLOADER_Initialize
   478 ;;		_EUSART1_Initialize
   479 ;;		_OSCILLATOR_Initialize
   480 ;;		_PIN_MANAGER_Initialize
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text1
   487  000624                     __ptext1:
   488                           	opt stack 0
   489  000624                     _SYSTEM_Initialize:
   490                           	opt stack 23
   491                           
   492                           ;mcc.c: 114: PIN_MANAGER_Initialize();
   493                           
   494                           ;incstack = 0
   495  000624  ECB7  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   496                           
   497                           ;mcc.c: 115: OSCILLATOR_Initialize();
   498  000628  EC1B  F003         	call	_OSCILLATOR_Initialize	;wreg free
   499                           
   500                           ;mcc.c: 116: EUSART1_Initialize();
   501  00062C  ECFC  F002         	call	_EUSART1_Initialize	;wreg free
   502                           
   503                           ;mcc.c: 117: BOOTLOADER_Initialize();
   504  000630  EC07  F003         	call	_BOOTLOADER_Initialize	;wreg free
   505  000634  0012               	return		;funcret
   506  000636                     __end_of_SYSTEM_Initialize:
   507                           	opt stack 0
   508                           pclatu	equ	0xFFB
   509                           pclath	equ	0xFFA
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           prodh	equ	0xFF4
   515                           prodl	equ	0xFF3
   516                           postinc0	equ	0xFEE
   517                           fsr0h	equ	0xFEA
   518                           fsr0l	equ	0xFE9
   519                           wreg	equ	0xFE8
   520                           fsr1h	equ	0xFE2
   521                           fsr1l	equ	0xFE1
   522                           fsr2h	equ	0xFDA
   523                           fsr2l	equ	0xFD9
   524                           
   525 ;; *************** function _PIN_MANAGER_Initialize *****************
   526 ;; Defined at:
   527 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_SYSTEM_Initialize
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text2
   556  00056E                     __ptext2:
   557                           	opt stack 0
   558  00056E                     _PIN_MANAGER_Initialize:
   559                           	opt stack 27
   560                           
   561                           ;pin_manager.c: 57: LATE = 0x00;
   562                           
   563                           ;incstack = 0
   564  00056E  0E00               	movlw	0
   565  000570  6E8D               	movwf	3981,c	;volatile
   566                           
   567                           ;pin_manager.c: 58: LATD = 0x00;
   568  000572  0E00               	movlw	0
   569  000574  6E8C               	movwf	3980,c	;volatile
   570                           
   571                           ;pin_manager.c: 59: LATA = 0x00;
   572  000576  0E00               	movlw	0
   573  000578  6E89               	movwf	3977,c	;volatile
   574                           
   575                           ;pin_manager.c: 60: LATB = 0x00;
   576  00057A  0E00               	movlw	0
   577  00057C  6E8A               	movwf	3978,c	;volatile
   578                           
   579                           ;pin_manager.c: 61: LATC = 0x40;
   580  00057E  0E40               	movlw	64
   581  000580  6E8B               	movwf	3979,c	;volatile
   582                           
   583                           ;pin_manager.c: 66: TRISE = 0x07;
   584  000582  0E07               	movlw	7
   585  000584  6E96               	movwf	3990,c	;volatile
   586                           
   587                           ;pin_manager.c: 67: TRISA = 0xFF;
   588  000586  6892               	setf	3986,c	;volatile
   589                           
   590                           ;pin_manager.c: 68: TRISB = 0xFF;
   591  000588  6893               	setf	3987,c	;volatile
   592                           
   593                           ;pin_manager.c: 69: TRISC = 0xBF;
   594  00058A  0EBF               	movlw	191
   595  00058C  6E94               	movwf	3988,c	;volatile
   596                           
   597                           ;pin_manager.c: 70: TRISD = 0xFF;
   598  00058E  6895               	setf	3989,c	;volatile
   599                           
   600                           ;pin_manager.c: 75: ANSELC = 0x3C;
   601  000590  0E3C               	movlw	60
   602  000592  010F               	movlb	15	; () banked
   603  000594  6F3A               	movwf	58,b	;volatile
   604                           
   605                           ;pin_manager.c: 76: ANSELB = 0x3F;
   606  000596  0E3F               	movlw	63
   607  000598  010F               	movlb	15	; () banked
   608  00059A  6F39               	movwf	57,b	;volatile
   609                           
   610                           ; BSR set to: 15
   611                           ;pin_manager.c: 77: ANSELD = 0xFF;
   612  00059C  010F               	movlb	15	; () banked
   613  00059E  693B               	setf	59,b	;volatile
   614                           
   615                           ;pin_manager.c: 78: ANSELE = 0x07;
   616  0005A0  0E07               	movlw	7
   617  0005A2  010F               	movlb	15	; () banked
   618  0005A4  6F3C               	movwf	60,b	;volatile
   619                           
   620                           ;pin_manager.c: 79: ANSELA = 0x2F;
   621  0005A6  0E2F               	movlw	47
   622  0005A8  010F               	movlb	15	; () banked
   623  0005AA  6F38               	movwf	56,b	;volatile
   624                           
   625                           ; BSR set to: 15
   626                           ;pin_manager.c: 84: WPUB = 0xFF;
   627  0005AC  6861               	setf	3937,c	;volatile
   628                           
   629                           ; BSR set to: 15
   630                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
   631  0005AE  9EF1               	bcf	intcon2,7,c	;volatile
   632                           
   633                           ; BSR set to: 15
   634  0005B0  0012               	return		;funcret
   635  0005B2                     __end_of_PIN_MANAGER_Initialize:
   636                           	opt stack 0
   637                           pclatu	equ	0xFFB
   638                           pclath	equ	0xFFA
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           prodh	equ	0xFF4
   644                           prodl	equ	0xFF3
   645                           intcon2	equ	0xFF1
   646                           postinc0	equ	0xFEE
   647                           fsr0h	equ	0xFEA
   648                           fsr0l	equ	0xFE9
   649                           wreg	equ	0xFE8
   650                           fsr1h	equ	0xFE2
   651                           fsr1l	equ	0xFE1
   652                           fsr2h	equ	0xFDA
   653                           fsr2l	equ	0xFD9
   654                           
   655 ;; *************** function _OSCILLATOR_Initialize *****************
   656 ;; Defined at:
   657 ;;		line 120 in file "mcc_generated_files/mcc.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    2
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_SYSTEM_Initialize
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text3
   686  000636                     __ptext3:
   687                           	opt stack 0
   688  000636                     _OSCILLATOR_Initialize:
   689                           	opt stack 27
   690                           
   691                           ;mcc.c: 123: OSCCON = 0x70;
   692                           
   693                           ; BSR set to: 15
   694                           ;incstack = 0
   695  000636  0E70               	movlw	112
   696  000638  6ED3               	movwf	4051,c	;volatile
   697                           
   698                           ;mcc.c: 125: OSCCON2 = 0x04;
   699  00063A  0E04               	movlw	4
   700  00063C  6ED2               	movwf	4050,c	;volatile
   701                           
   702                           ;mcc.c: 127: OSCTUNE = 0x40;
   703  00063E  0E40               	movlw	64
   704  000640  6E9B               	movwf	3995,c	;volatile
   705  000642                     
   706                           ;mcc.c: 130: {
   707  000642  BED2               	btfsc	4050,7,c	;volatile
   708  000644  0012               	return	
   709  000646  D7FD               	goto	l159
   710  000648                     __end_of_OSCILLATOR_Initialize:
   711                           	opt stack 0
   712                           pclatu	equ	0xFFB
   713                           pclath	equ	0xFFA
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           prodh	equ	0xFF4
   719                           prodl	equ	0xFF3
   720                           intcon2	equ	0xFF1
   721                           postinc0	equ	0xFEE
   722                           fsr0h	equ	0xFEA
   723                           fsr0l	equ	0xFE9
   724                           wreg	equ	0xFE8
   725                           fsr1h	equ	0xFE2
   726                           fsr1l	equ	0xFE1
   727                           fsr2h	equ	0xFDA
   728                           fsr2l	equ	0xFD9
   729                           
   730 ;; *************** function _EUSART1_Initialize *****************
   731 ;; Defined at:
   732 ;;		line 55 in file "mcc_generated_files/eusart1.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, status,2
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    2
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_SYSTEM_Initialize
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text4
   761  0005F8                     __ptext4:
   762                           	opt stack 0
   763  0005F8                     _EUSART1_Initialize:
   764                           	opt stack 27
   765                           
   766                           ;eusart1.c: 60: BAUDCON1 = 0x08;
   767                           
   768                           ;incstack = 0
   769  0005F8  0E08               	movlw	8
   770  0005FA  6EB8               	movwf	4024,c	;volatile
   771                           
   772                           ;eusart1.c: 63: RCSTA1 = 0x90;
   773  0005FC  0E90               	movlw	144
   774  0005FE  6EAB               	movwf	4011,c	;volatile
   775                           
   776                           ;eusart1.c: 66: TXSTA1 = 0x24;
   777  000600  0E24               	movlw	36
   778  000602  6EAC               	movwf	4012,c	;volatile
   779                           
   780                           ;eusart1.c: 69: SPBRG1 = 0x82;
   781  000604  0E82               	movlw	130
   782  000606  6EAF               	movwf	4015,c	;volatile
   783                           
   784                           ;eusart1.c: 72: SPBRGH1 = 0x06;
   785  000608  0E06               	movlw	6
   786  00060A  6EB0               	movwf	4016,c	;volatile
   787  00060C  0012               	return		;funcret
   788  00060E                     __end_of_EUSART1_Initialize:
   789                           	opt stack 0
   790                           pclatu	equ	0xFFB
   791                           pclath	equ	0xFFA
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           prodh	equ	0xFF4
   797                           prodl	equ	0xFF3
   798                           intcon2	equ	0xFF1
   799                           postinc0	equ	0xFEE
   800                           fsr0h	equ	0xFEA
   801                           fsr0l	equ	0xFE9
   802                           wreg	equ	0xFE8
   803                           fsr1h	equ	0xFE2
   804                           fsr1l	equ	0xFE1
   805                           fsr2h	equ	0xFDA
   806                           fsr2l	equ	0xFD9
   807                           
   808 ;; *************** function _BOOTLOADER_Initialize *****************
   809 ;; Defined at:
   810 ;;		line 141 in file "mcc_generated_files/pic18f_bootload.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    6
   831 ;; This function calls:
   832 ;;		_Bootload_Required
   833 ;;		_Run_Bootloader
   834 ;; This function is called by:
   835 ;;		_SYSTEM_Initialize
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text5
   840  00060E                     __ptext5:
   841                           	opt stack 0
   842  00060E                     _BOOTLOADER_Initialize:
   843                           	opt stack 23
   844                           
   845                           ;pic18f_bootload.c: 143: if (Bootload_Required () == 1)
   846                           
   847                           ;incstack = 0
   848  00060E  ECEC  F002         	call	_Bootload_Required	;wreg free
   849  000612  06E8               	decf	wreg,f,c
   850  000614  B4D8               	btfsc	status,2,c
   851                           
   852                           ;pic18f_bootload.c: 144: {
   853                           ;pic18f_bootload.c: 145: Run_Bootloader ();
   854  000616  EC67  F000         	call	_Run_Bootloader	;wreg free
   855                           
   856                           ;pic18f_bootload.c: 146: }
   857                           ;pic18f_bootload.c: 147: STKPTR = 0x00;
   858  00061A  0E00               	movlw	0
   859  00061C  6EFC               	movwf	stkptr,c	;# 
   860  00061E  EF00 F004          	goto	2048	;# 
   861  000622  0012               	return		;funcret
   862  000624                     __end_of_BOOTLOADER_Initialize:
   863                           	opt stack 0
   864                           stkptr	equ	0xFFC
   865                           pclatu	equ	0xFFB
   866                           pclath	equ	0xFFA
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           prodh	equ	0xFF4
   872                           prodl	equ	0xFF3
   873                           intcon2	equ	0xFF1
   874                           postinc0	equ	0xFEE
   875                           fsr0h	equ	0xFEA
   876                           fsr0l	equ	0xFE9
   877                           wreg	equ	0xFE8
   878                           fsr1h	equ	0xFE2
   879                           fsr1l	equ	0xFE1
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _Run_Bootloader *****************
   885 ;; Defined at:
   886 ;;		line 62 in file "mcc_generated_files/pic18f_uart.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  ch              1    0[BANK0 ] unsigned char 
   891 ;;  index           1    2[BANK0 ] volatile unsigned char 
   892 ;;  msg_length      1    1[BANK0 ] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:        3 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    5
   909 ;; This function calls:
   910 ;;		_Check_Device_Reset
   911 ;;		_EUSART1_Read
   912 ;;		_EUSART1_Write
   913 ;;		_ProcessBootBuffer
   914 ;; This function is called by:
   915 ;;		_BOOTLOADER_Initialize
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text6
   920  0000CE                     __ptext6:
   921                           	opt stack 0
   922  0000CE                     _Run_Bootloader:
   923                           	opt stack 23
   924                           
   925                           ;pic18f_uart.c: 68: {
   926                           ;pic18f_uart.c: 69: while (TXSTA1bits.TRMT == 0);
   927                           
   928                           ;incstack = 0
   929                           ;pic18f_uart.c: 64: volatile uint8_t index;
   930                           ;pic18f_uart.c: 65: uint8_t msg_length;
   931                           ;pic18f_uart.c: 67: while (1)
   932  0000CE  A2AC               	btfss	4012,1,c	;volatile
   933  0000D0  D7FE               	goto	_Run_Bootloader
   934                           
   935                           ;pic18f_uart.c: 71: Check_Device_Reset ();
   936  0000D2  EC38  F003         	call	_Check_Device_Reset	;wreg free
   937  0000D6  D004               	goto	L1
   938  0000D8                     l319:
   939                           
   940                           ;pic18f_uart.c: 78: {
   941                           ;pic18f_uart.c: 79: if (BAUDCONbits.ABDOVF == 1)
   942  0000D8  AEB8               	btfss	4024,7,c	;volatile
   943  0000DA  D003               	goto	l320
   944                           
   945                           ;pic18f_uart.c: 80: {
   946                           ;pic18f_uart.c: 81: BAUDCONbits.ABDEN = 0;
   947  0000DC  90B8               	bcf	4024,0,c	;volatile
   948                           
   949                           ;pic18f_uart.c: 82: BAUDCONbits.ABDOVF = 0;
   950  0000DE  9EB8               	bcf	4024,7,c	;volatile
   951  0000E0                     L1:
   952                           
   953                           ;pic18f_uart.c: 83: BAUDCONbits.ABDEN = 1;
   954  0000E0  80B8               	bsf	4024,0,c	;volatile
   955  0000E2                     l320:
   956  0000E2  B0B8               	btfsc	4024,0,c	;volatile
   957  0000E4  D7F9               	goto	l319
   958                           
   959                           ;pic18f_uart.c: 84: }
   960                           ;pic18f_uart.c: 85: }
   961                           ;pic18f_uart.c: 87: index = RCREG;
   962  0000E6  CFAE F0AB          	movff	4014,Run_Bootloader@index	;volatile
   963                           
   964                           ;pic18f_uart.c: 93: index = 0;
   965  0000EA  0E00               	movlw	0
   966  0000EC  0100               	movlb	0	; () banked
   967  0000EE  6FAB               	movwf	Run_Bootloader@index& (0+255),b	;volatile
   968                           
   969                           ;pic18f_uart.c: 94: msg_length = 9;
   970  0000F0  0E09               	movlw	9
   971  0000F2  0100               	movlb	0	; () banked
   972  0000F4  6FAA               	movwf	Run_Bootloader@msg_length& (0+255),b
   973                           
   974                           ;pic18f_uart.c: 95: uint8_t ch;
   975                           ;pic18f_uart.c: 97: while (index < msg_length)
   976  0000F6  D029               	goto	l325
   977  0000F8                     
   978                           ; BSR set to: 0
   979                           ;pic18f_uart.c: 98: {
   980                           ;pic18f_uart.c: 99: ch = EUSART1_Read();
   981                           
   982                           ; BSR set to: 0
   983  0000F8  EC24  F003         	call	_EUSART1_Read	;wreg free
   984  0000FC  0100               	movlb	0	; () banked
   985  0000FE  6FA9               	movwf	Run_Bootloader@ch& (0+255),b
   986                           
   987                           ; BSR set to: 0
   988                           ;pic18f_uart.c: 100: frame.buffer [index ++] = ch;
   989  000100  0100               	movlb	0	; () banked
   990  000102  51AB               	movf	Run_Bootloader@index& (0+255),w,b	;volatile
   991  000104  0D01               	mullw	1
   992  000106  0E60               	movlw	low _frame
   993  000108  24F3               	addwf	prodl,w,c
   994  00010A  6ED9               	movwf	fsr2l,c
   995  00010C  0E00               	movlw	high _frame
   996  00010E  20F4               	addwfc	prodh,w,c
   997  000110  6EDA               	movwf	fsr2h,c
   998  000112  C0A9  FFDF         	movff	Run_Bootloader@ch,indf2
   999                           
  1000                           ; BSR set to: 0
  1001  000116  0100               	movlb	0	; () banked
  1002  000118  2BAB               	incf	Run_Bootloader@index& (0+255),f,b	;volatile
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;pic18f_uart.c: 101: if (index == 4)
  1006  00011A  0E04               	movlw	4
  1007  00011C  0100               	movlb	0	; () banked
  1008  00011E  19AB               	xorwf	Run_Bootloader@index& (0+255),w,b	;volatile
  1009  000120  A4D8               	btfss	status,2,c
  1010  000122  D013               	goto	l325
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;pic18f_uart.c: 102: {
  1014                           ;pic18f_uart.c: 103: if ((frame.command == 2)
  1015                           ;pic18f_uart.c: 104: || (frame.command == 5)
  1016                           ;pic18f_uart.c: 105: || (frame.command == 7))
  1017  000124  0E02               	movlw	2
  1018  000126  0100               	movlb	0	; () banked
  1019  000128  1960               	xorwf	_frame& (0+255),w,b
  1020  00012A  B4D8               	btfsc	status,2,c
  1021  00012C  D00A               	goto	u870
  1022                           
  1023                           ; BSR set to: 0
  1024  00012E  0E05               	movlw	5
  1025  000130  0100               	movlb	0	; () banked
  1026  000132  1960               	xorwf	_frame& (0+255),w,b
  1027  000134  B4D8               	btfsc	status,2,c
  1028  000136  D005               	goto	u870
  1029                           
  1030                           ; BSR set to: 0
  1031  000138  0E07               	movlw	7
  1032  00013A  0100               	movlb	0	; () banked
  1033  00013C  1960               	xorwf	_frame& (0+255),w,b
  1034  00013E  A4D8               	btfss	status,2,c
  1035  000140  D004               	goto	l325
  1036  000142                     u870:
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;pic18f_uart.c: 106: {
  1040                           ;pic18f_uart.c: 107: msg_length += frame.data_length;
  1041                           
  1042                           ; BSR set to: 0
  1043  000142  0100               	movlb	0	; () banked
  1044  000144  5161               	movf	(_frame+1)& (0+255),w,b
  1045  000146  0100               	movlb	0	; () banked
  1046  000148  27AA               	addwf	Run_Bootloader@msg_length& (0+255),f,b
  1047  00014A                     l325:
  1048                           
  1049                           ; BSR set to: 0
  1050                           
  1051                           ; BSR set to: 0
  1052                           
  1053                           ; BSR set to: 0
  1054  00014A  0100               	movlb	0	; () banked
  1055  00014C  51AA               	movf	Run_Bootloader@msg_length& (0+255),w,b
  1056  00014E  0100               	movlb	0	; () banked
  1057  000150  5DAB               	subwf	Run_Bootloader@index& (0+255),w,b	;volatile
  1058  000152  A0D8               	btfss	status,0,c
  1059  000154  D7D1               	goto	l323
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;pic18f_uart.c: 108: }
  1063                           ;pic18f_uart.c: 109: }
  1064                           ;pic18f_uart.c: 110: }
  1065                           ;pic18f_uart.c: 112: msg_length = ProcessBootBuffer ();
  1066                           
  1067                           ; BSR set to: 0
  1068  000156  ECF5  F001         	call	_ProcessBootBuffer	;wreg free
  1069  00015A  0100               	movlb	0	; () banked
  1070  00015C  6FAA               	movwf	Run_Bootloader@msg_length& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;pic18f_uart.c: 117: EUSART1_Write(0x55);
  1074  00015E  0E55               	movlw	85
  1075  000160  EC32  F003         	call	_EUSART1_Write
  1076                           
  1077                           ;pic18f_uart.c: 118: index = 0;
  1078  000164  0E00               	movlw	0
  1079  000166  0100               	movlb	0	; () banked
  1080  000168  6FAB               	movwf	Run_Bootloader@index& (0+255),b	;volatile
  1081                           
  1082                           ;pic18f_uart.c: 119: while (index < msg_length)
  1083  00016A  D00E               	goto	l329
  1084  00016C                     
  1085                           ; BSR set to: 0
  1086                           ;pic18f_uart.c: 120: {
  1087                           ;pic18f_uart.c: 121: EUSART1_Write (frame.buffer [index++]);
  1088                           
  1089                           ; BSR set to: 0
  1090  00016C  0100               	movlb	0	; () banked
  1091  00016E  51AB               	movf	Run_Bootloader@index& (0+255),w,b	;volatile
  1092  000170  0D01               	mullw	1
  1093  000172  0E60               	movlw	low _frame
  1094  000174  24F3               	addwf	prodl,w,c
  1095  000176  6ED9               	movwf	fsr2l,c
  1096  000178  0E00               	movlw	high _frame
  1097  00017A  20F4               	addwfc	prodh,w,c
  1098  00017C  6EDA               	movwf	fsr2h,c
  1099  00017E  50DF               	movf	indf2,w,c
  1100  000180  EC32  F003         	call	_EUSART1_Write
  1101  000184  0100               	movlb	0	; () banked
  1102  000186  2BAB               	incf	Run_Bootloader@index& (0+255),f,b	;volatile
  1103  000188                     l329:
  1104                           
  1105                           ; BSR set to: 0
  1106                           
  1107                           ; BSR set to: 0
  1108  000188  0100               	movlb	0	; () banked
  1109  00018A  51AA               	movf	Run_Bootloader@msg_length& (0+255),w,b
  1110  00018C  0100               	movlb	0	; () banked
  1111  00018E  5DAB               	subwf	Run_Bootloader@index& (0+255),w,b	;volatile
  1112  000190  B0D8               	btfsc	status,0,c
  1113  000192  D79D               	goto	_Run_Bootloader
  1114  000194  D7EB               	goto	l330
  1115  000196                     __end_of_Run_Bootloader:
  1116                           	opt stack 0
  1117                           stkptr	equ	0xFFC
  1118                           pclatu	equ	0xFFB
  1119                           pclath	equ	0xFFA
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           prodh	equ	0xFF4
  1125                           prodl	equ	0xFF3
  1126                           intcon2	equ	0xFF1
  1127                           postinc0	equ	0xFEE
  1128                           fsr0h	equ	0xFEA
  1129                           fsr0l	equ	0xFE9
  1130                           wreg	equ	0xFE8
  1131                           fsr1h	equ	0xFE2
  1132                           fsr1l	equ	0xFE1
  1133                           indf2	equ	0xFDF
  1134                           fsr2h	equ	0xFDA
  1135                           fsr2l	equ	0xFD9
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _ProcessBootBuffer *****************
  1139 ;; Defined at:
  1140 ;;		line 175 in file "mcc_generated_files/pic18f_bootload.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  len             1   46[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      unsigned char 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    4
  1161 ;; This function calls:
  1162 ;;		_Calc_Checksum
  1163 ;;		_Erase_Flash
  1164 ;;		_Get_Version_Data
  1165 ;;		_Read_Config
  1166 ;;		_Write_Config
  1167 ;;		_Write_Flash
  1168 ;; This function is called by:
  1169 ;;		_Run_Bootloader
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text7
  1174  0003EA                     __ptext7:
  1175                           	opt stack 0
  1176  0003EA                     _ProcessBootBuffer:
  1177                           	opt stack 23
  1178                           
  1179                           ;pic18f_bootload.c: 177: uint8_t len;
  1180                           ;pic18f_bootload.c: 178: EE_Key_1 = frame.EE_key_1;
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;incstack = 0
  1184  0003EA  C063  F000         	movff	_frame+3,0
  1185                           
  1186                           ;pic18f_bootload.c: 179: EE_Key_2 = frame.EE_key_2;
  1187  0003EE  C064  F001         	movff	_frame+4,1
  1188                           
  1189                           ;pic18f_bootload.c: 182: switch (frame.command)
  1190  0003F2  D01B               	goto	l236
  1191  0003F4                     
  1192                           ;pic18f_bootload.c: 185: len = Get_Version_Data();
  1193  0003F4  EC6F  F001         	call	_Get_Version_Data	;wreg free
  1194  0003F8  D016               	goto	L8
  1195  0003FA                     
  1196                           ;pic18f_bootload.c: 188: len = Write_Flash();
  1197  0003FA  ECCB  F000         	call	_Write_Flash	;wreg free
  1198  0003FE  D013               	goto	L8
  1199  000400                     
  1200                           ;pic18f_bootload.c: 191: len = Erase_Flash();
  1201  000400  EC2F  F002         	call	_Erase_Flash	;wreg free
  1202  000404  D010               	goto	L8
  1203  000406                     
  1204                           ;pic18f_bootload.c: 194: len = Read_Config();
  1205  000406  EC8D  F002         	call	_Read_Config	;wreg free
  1206  00040A  D00D               	goto	L8
  1207  00040C                     
  1208                           ;pic18f_bootload.c: 197: len = Write_Config();
  1209  00040C  ECB9  F001         	call	_Write_Config	;wreg free
  1210  000410  D00A               	goto	L8
  1211  000412                     
  1212                           ;pic18f_bootload.c: 200: len = Calc_Checksum();
  1213  000412  EC61  F002         	call	_Calc_Checksum	;wreg free
  1214  000416  D007               	goto	L8
  1215  000418                     
  1216                           ;pic18f_bootload.c: 203: reset_pending = 1;
  1217  000418  0E01               	movlw	1
  1218  00041A  6E35               	movwf	_reset_pending,c
  1219                           
  1220                           ;pic18f_bootload.c: 204: len = 9;
  1221  00041C  0E09               	movlw	9
  1222  00041E  D003               	goto	L8
  1223  000420                     l245:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;pic18f_bootload.c: 207: frame.data[0] = 0xFF;
  1227  000420  0100               	movlb	0	; () banked
  1228  000422  6969               	setf	(_frame+9)& (0+255),b
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;pic18f_bootload.c: 208: len = 10;
  1232  000424  0E0A               	movlw	10
  1233  000426                     L8:
  1234  000426  6E30               	movwf	ProcessBootBuffer@len,c
  1235                           
  1236                           ;pic18f_bootload.c: 209: }
  1237  000428  D018               	goto	l238
  1238  00042A                     l236:
  1239                           
  1240                           ; BSR set to: 0
  1241  00042A  0100               	movlb	0	; () banked
  1242  00042C  5160               	movf	_frame& (0+255),w,b
  1243                           
  1244                           ; Switch size 1, requested type "space"
  1245                           ; Number of cases is 7, Range of values is 0 to 9
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte           22    12 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250  00042E  0A00               	xorlw	0	; case 0
  1251  000430  B4D8               	btfsc	status,2,c
  1252  000432  D7E0               	goto	l237
  1253  000434  0A02               	xorlw	2	; case 2
  1254  000436  B4D8               	btfsc	status,2,c
  1255  000438  D7E0               	goto	l239
  1256  00043A  0A01               	xorlw	1	; case 3
  1257  00043C  B4D8               	btfsc	status,2,c
  1258  00043E  D7E0               	goto	l240
  1259  000440  0A05               	xorlw	5	; case 6
  1260  000442  B4D8               	btfsc	status,2,c
  1261  000444  D7E0               	goto	l241
  1262  000446  0A01               	xorlw	1	; case 7
  1263  000448  B4D8               	btfsc	status,2,c
  1264  00044A  D7E0               	goto	l242
  1265  00044C  0A0F               	xorlw	15	; case 8
  1266  00044E  B4D8               	btfsc	status,2,c
  1267  000450  D7E0               	goto	l243
  1268  000452  0A01               	xorlw	1	; case 9
  1269  000454  B4D8               	btfsc	status,2,c
  1270  000456  D7E0               	goto	l244
  1271  000458  D7E3               	goto	l245
  1272  00045A                     l238:
  1273                           
  1274                           ;pic18f_bootload.c: 210: return (len);
  1275                           
  1276                           ; BSR set to: 0
  1277  00045A  5030               	movf	ProcessBootBuffer@len,w,c
  1278  00045C  0012               	return	
  1279  00045E                     __end_of_ProcessBootBuffer:
  1280                           	opt stack 0
  1281                           stkptr	equ	0xFFC
  1282                           pclatu	equ	0xFFB
  1283                           pclath	equ	0xFFA
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           intcon2	equ	0xFF1
  1291                           postinc0	equ	0xFEE
  1292                           fsr0h	equ	0xFEA
  1293                           fsr0l	equ	0xFE9
  1294                           wreg	equ	0xFE8
  1295                           fsr1h	equ	0xFE2
  1296                           fsr1l	equ	0xFE1
  1297                           indf2	equ	0xFDF
  1298                           fsr2h	equ	0xFDA
  1299                           fsr2l	equ	0xFD9
  1300                           status	equ	0xFD8
  1301                           
  1302 ;; *************** function _Write_Flash *****************
  1303 ;; Defined at:
  1304 ;;		line 263 in file "mcc_generated_files/pic18f_bootload.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  i               1   45[COMRAM] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      unsigned char 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        7 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    3
  1325 ;; This function calls:
  1326 ;;		_StartWrite
  1327 ;; This function is called by:
  1328 ;;		_ProcessBootBuffer
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text8
  1333  000196                     __ptext8:
  1334                           	opt stack 0
  1335  000196                     _Write_Flash:
  1336                           	opt stack 23
  1337                           
  1338                           ;pic18f_bootload.c: 265: TBLPTRL = frame.address_L;
  1339                           
  1340                           ;incstack = 0
  1341  000196  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1342                           
  1343                           ;pic18f_bootload.c: 266: TBLPTRH = frame.address_H;
  1344  00019A  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1345                           
  1346                           ;pic18f_bootload.c: 267: TBLPTRU = frame.address_U;
  1347  00019E  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1348                           
  1349                           ;pic18f_bootload.c: 268: EECON1 = 0xA4;
  1350  0001A2  0EA4               	movlw	164
  1351  0001A4  6EA6               	movwf	4006,c	;volatile
  1352                           
  1353                           ;pic18f_bootload.c: 269: for (uint8_t i = 0; i < frame.data_length; i ++)
  1354  0001A6  0E00               	movlw	0
  1355  0001A8  6E2F               	movwf	Write_Flash@i,c
  1356  0001AA  D039               	goto	l254
  1357  0001AC                     
  1358                           ;pic18f_bootload.c: 270: {
  1359                           ;pic18f_bootload.c: 271: TABLAT = frame.data[i];
  1360  0001AC  502F               	movf	Write_Flash@i,w,c
  1361  0001AE  0D01               	mullw	1
  1362  0001B0  0E09               	movlw	9
  1363  0001B2  26F3               	addwf	prodl,f,c
  1364  0001B4  0E00               	movlw	0
  1365  0001B6  22F4               	addwfc	prodh,f,c
  1366  0001B8  0E60               	movlw	low _frame
  1367  0001BA  24F3               	addwf	prodl,w,c
  1368  0001BC  6ED9               	movwf	fsr2l,c
  1369  0001BE  0E00               	movlw	high _frame
  1370  0001C0  20F4               	addwfc	prodh,w,c
  1371  0001C2  6EDA               	movwf	fsr2h,c
  1372  0001C4  50DF               	movf	indf2,w,c
  1373  0001C6  6EF5               	movwf	tablat,c	;volatile
  1374                           
  1375                           ;pic18f_bootload.c: 272: if (TBLPTR >= 65536)
  1376  0001C8  04F8               	decf	tblptru,w,c	;volatile
  1377  0001CA  A0D8               	btfss	status,0,c
  1378  0001CC  D005               	goto	l256
  1379                           
  1380                           ;pic18f_bootload.c: 273: {
  1381                           ;pic18f_bootload.c: 274: frame.data[0] = 0xFE;
  1382  0001CE  0EFE               	movlw	254
  1383  0001D0  0100               	movlb	0	; () banked
  1384  0001D2  6F69               	movwf	(_frame+9)& (0+255),b
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;pic18f_bootload.c: 275: return (10);
  1388  0001D4  0E0A               	movlw	10
  1389                           
  1390                           ; BSR set to: 0
  1391  0001D6  0012               	return	
  1392  0001D8                     l256:
  1393  0001D8  000D               	tblwt		*+	;# 
  1394                           
  1395                           ;pic18f_bootload.c: 278: if (((TBLPTRL & (64 - 1)) == (64 - 1))
  1396                           ;pic18f_bootload.c: 279: || (i == frame.data_length - 1))
  1397  0001DA  50F6               	movf	tblptrl,w,c	;volatile
  1398  0001DC  0B3F               	andlw	63
  1399  0001DE  0A3F               	xorlw	63
  1400  0001E0  B4D8               	btfsc	status,2,c
  1401  0001E2  D018               	goto	u690
  1402  0001E4  502F               	movf	Write_Flash@i,w,c
  1403  0001E6  6E29               	movwf	??_Write_Flash& (0+255),c
  1404  0001E8  6A2A               	clrf	(??_Write_Flash+1)& (0+255),c
  1405  0001EA  0EFF               	movlw	255
  1406  0001EC  6E2B               	movwf	(??_Write_Flash+2)& (0+255),c
  1407  0001EE  0EFF               	movlw	255
  1408  0001F0  6E2C               	movwf	(??_Write_Flash+3)& (0+255),c
  1409  0001F2  EE20  F061         	lfsr	2,_frame+1
  1410  0001F6  CFDE F02D          	movff	postinc2,??_Write_Flash+4
  1411  0001FA  CFDD F02E          	movff	postdec2,??_Write_Flash+5
  1412  0001FE  502B               	movf	??_Write_Flash+2,w,c
  1413  000200  262D               	addwf	??_Write_Flash+4,f,c
  1414  000202  502C               	movf	??_Write_Flash+3,w,c
  1415  000204  222E               	addwfc	??_Write_Flash+5,f,c
  1416  000206  5029               	movf	??_Write_Flash,w,c
  1417  000208  182D               	xorwf	??_Write_Flash+4,w,c
  1418  00020A  E108               	bnz	l1646
  1419  00020C  502A               	movf	??_Write_Flash+1,w,c
  1420  00020E  182E               	xorwf	??_Write_Flash+5,w,c
  1421  000210  A4D8               	btfss	status,2,c
  1422  000212  D004               	goto	l258
  1423  000214                     u690:
  1424  000214  000A               	tblrd		*-	;# 
  1425                           
  1426                           ;pic18f_bootload.c: 282: StartWrite();
  1427  000216  EC2C  F003         	call	_StartWrite	;wreg free
  1428  00021A  0009               	tblrd		*+	;# 
  1429  00021C                     l258:
  1430  00021C                     l1646:
  1431  00021C  2A2F               	incf	Write_Flash@i,f,c
  1432  00021E                     l254:
  1433  00021E  502F               	movf	Write_Flash@i,w,c
  1434  000220  6E29               	movwf	??_Write_Flash& (0+255),c
  1435  000222  6A2A               	clrf	(??_Write_Flash+1)& (0+255),c
  1436  000224  0100               	movlb	0	; () banked
  1437  000226  5161               	movf	(_frame+1)& (0+255),w,b
  1438  000228  5C29               	subwf	??_Write_Flash,w,c
  1439  00022A  0100               	movlb	0	; () banked
  1440  00022C  5162               	movf	(_frame+2)& (0+255),w,b
  1441  00022E  582A               	subwfb	??_Write_Flash+1,w,c
  1442  000230  A0D8               	btfss	status,0,c
  1443  000232  D7BC               	goto	l255
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;pic18f_bootload.c: 284: }
  1447                           ;pic18f_bootload.c: 285: }
  1448                           ;pic18f_bootload.c: 286: frame.data[0] = 0x01;
  1449                           
  1450                           ; BSR set to: 0
  1451  000234  0E01               	movlw	1
  1452  000236  0100               	movlb	0	; () banked
  1453  000238  6F69               	movwf	(_frame+9)& (0+255),b
  1454                           
  1455                           ;pic18f_bootload.c: 287: EE_Key_1 = 0x00;
  1456  00023A  0E00               	movlw	0
  1457  00023C  6E00               	movwf	0,c
  1458                           
  1459                           ;pic18f_bootload.c: 288: EE_Key_2 = 0x00;
  1460  00023E  0E00               	movlw	0
  1461  000240  6E01               	movwf	1,c
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;pic18f_bootload.c: 289: return (10);
  1465  000242  0E0A               	movlw	10
  1466  000244  0012               	return	
  1467  000246                     __end_of_Write_Flash:
  1468                           	opt stack 0
  1469                           stkptr	equ	0xFFC
  1470                           pclatu	equ	0xFFB
  1471                           pclath	equ	0xFFA
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           prodh	equ	0xFF4
  1477                           prodl	equ	0xFF3
  1478                           intcon2	equ	0xFF1
  1479                           postinc0	equ	0xFEE
  1480                           fsr0h	equ	0xFEA
  1481                           fsr0l	equ	0xFE9
  1482                           wreg	equ	0xFE8
  1483                           fsr1h	equ	0xFE2
  1484                           fsr1l	equ	0xFE1
  1485                           indf2	equ	0xFDF
  1486                           postinc2	equ	0xFDE
  1487                           postdec2	equ	0xFDD
  1488                           fsr2h	equ	0xFDA
  1489                           fsr2l	equ	0xFD9
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _Write_Config *****************
  1493 ;; Defined at:
  1494 ;;		line 348 in file "mcc_generated_files/pic18f_bootload.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  i               1   41[COMRAM] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:        3 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    3
  1515 ;; This function calls:
  1516 ;;		_StartWrite
  1517 ;; This function is called by:
  1518 ;;		_ProcessBootBuffer
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text9
  1523  000372                     __ptext9:
  1524                           	opt stack 0
  1525  000372                     _Write_Config:
  1526                           	opt stack 23
  1527                           
  1528                           ;pic18f_bootload.c: 350: TBLPTRL = frame.address_L;
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;incstack = 0
  1532  000372  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1533                           
  1534                           ;pic18f_bootload.c: 351: TBLPTRH = frame.address_H;
  1535  000376  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1536                           
  1537                           ;pic18f_bootload.c: 352: TBLPTRU = frame.address_U;
  1538  00037A  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1539                           
  1540                           ;pic18f_bootload.c: 353: if (TBLPTR > 0x20000F)
  1541  00037E  0E10               	movlw	16
  1542  000380  5CF6               	subwf	tblptrl,w,c	;volatile
  1543  000382  0E00               	movlw	0
  1544  000384  58F7               	subwfb	tblptrh,w,c	;volatile
  1545  000386  0E20               	movlw	32
  1546  000388  58F8               	subwfb	tblptru,w,c	;volatile
  1547  00038A  A0D8               	btfss	status,0,c
  1548  00038C  D002               	goto	l277
  1549                           
  1550                           ;pic18f_bootload.c: 354: EECON1 = 0xC4;
  1551  00038E  0EC4               	movlw	196
  1552  000390  D001               	goto	L9
  1553  000392                     l277:
  1554                           
  1555                           ;pic18f_bootload.c: 355: else
  1556                           ;pic18f_bootload.c: 356: EECON1 = 0x84;
  1557  000392  0E84               	movlw	132
  1558  000394                     L9:
  1559  000394  6EA6               	movwf	4006,c	;volatile
  1560                           
  1561                           ;pic18f_bootload.c: 357: for (uint8_t i= 0; i < frame.data_length; i ++)
  1562  000396  0E00               	movlw	0
  1563  000398  6E2B               	movwf	Write_Config@i,c
  1564  00039A  D013               	goto	l279
  1565  00039C                     
  1566                           ;pic18f_bootload.c: 358: {
  1567                           ;pic18f_bootload.c: 359: TABLAT = frame.data[i];
  1568  00039C  502B               	movf	Write_Config@i,w,c
  1569  00039E  0D01               	mullw	1
  1570  0003A0  0E09               	movlw	9
  1571  0003A2  26F3               	addwf	prodl,f,c
  1572  0003A4  0E00               	movlw	0
  1573  0003A6  22F4               	addwfc	prodh,f,c
  1574  0003A8  0E60               	movlw	low _frame
  1575  0003AA  24F3               	addwf	prodl,w,c
  1576  0003AC  6ED9               	movwf	fsr2l,c
  1577  0003AE  0E00               	movlw	high _frame
  1578  0003B0  20F4               	addwfc	prodh,w,c
  1579  0003B2  6EDA               	movwf	fsr2h,c
  1580  0003B4  50DF               	movf	indf2,w,c
  1581  0003B6  6EF5               	movwf	tablat,c	;volatile
  1582  0003B8  000C               	tblwt		*	;# 
  1583                           
  1584                           ;pic18f_bootload.c: 361: StartWrite();
  1585  0003BA  EC2C  F003         	call	_StartWrite	;wreg free
  1586                           
  1587                           ;pic18f_bootload.c: 362: ++ TBLPTRL;
  1588  0003BE  2AF6               	incf	tblptrl,f,c	;volatile
  1589  0003C0  2A2B               	incf	Write_Config@i,f,c
  1590  0003C2                     l279:
  1591  0003C2  502B               	movf	Write_Config@i,w,c
  1592  0003C4  6E29               	movwf	??_Write_Config& (0+255),c
  1593  0003C6  6A2A               	clrf	(??_Write_Config+1)& (0+255),c
  1594  0003C8  0100               	movlb	0	; () banked
  1595  0003CA  5161               	movf	(_frame+1)& (0+255),w,b
  1596  0003CC  5C29               	subwf	??_Write_Config,w,c
  1597  0003CE  0100               	movlb	0	; () banked
  1598  0003D0  5162               	movf	(_frame+2)& (0+255),w,b
  1599  0003D2  582A               	subwfb	??_Write_Config+1,w,c
  1600  0003D4  A0D8               	btfss	status,0,c
  1601  0003D6  D7E2               	goto	l280
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;pic18f_bootload.c: 363: }
  1605                           ;pic18f_bootload.c: 364: frame.data[0] = 0x01;
  1606                           
  1607                           ; BSR set to: 0
  1608  0003D8  0E01               	movlw	1
  1609  0003DA  0100               	movlb	0	; () banked
  1610  0003DC  6F69               	movwf	(_frame+9)& (0+255),b
  1611                           
  1612                           ;pic18f_bootload.c: 365: EE_Key_1 = 0x00;
  1613  0003DE  0E00               	movlw	0
  1614  0003E0  6E00               	movwf	0,c
  1615                           
  1616                           ;pic18f_bootload.c: 366: EE_Key_2 = 0x00;
  1617  0003E2  0E00               	movlw	0
  1618  0003E4  6E01               	movwf	1,c
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;pic18f_bootload.c: 367: return (10);
  1622  0003E6  0E0A               	movlw	10
  1623  0003E8  0012               	return	
  1624  0003EA                     __end_of_Write_Config:
  1625                           	opt stack 0
  1626                           stkptr	equ	0xFFC
  1627                           pclatu	equ	0xFFB
  1628                           pclath	equ	0xFFA
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           prodh	equ	0xFF4
  1634                           prodl	equ	0xFF3
  1635                           intcon2	equ	0xFF1
  1636                           postinc0	equ	0xFEE
  1637                           fsr0h	equ	0xFEA
  1638                           fsr0l	equ	0xFE9
  1639                           wreg	equ	0xFE8
  1640                           fsr1h	equ	0xFE2
  1641                           fsr1l	equ	0xFE1
  1642                           indf2	equ	0xFDF
  1643                           postinc2	equ	0xFDE
  1644                           postdec2	equ	0xFDD
  1645                           fsr2h	equ	0xFDA
  1646                           fsr2l	equ	0xFD9
  1647                           status	equ	0xFD8
  1648                           
  1649 ;; *************** function _Read_Config *****************
  1650 ;; Defined at:
  1651 ;;		line 328 in file "mcc_generated_files/pic18f_bootload.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  i               1   41[COMRAM] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      unsigned char 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;Total ram usage:        3 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    2
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_ProcessBootBuffer
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text10
  1680  00051A                     __ptext10:
  1681                           	opt stack 0
  1682  00051A                     _Read_Config:
  1683                           	opt stack 24
  1684                           
  1685                           ;pic18f_bootload.c: 330: TBLPTRL = frame.address_L;
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;incstack = 0
  1689  00051A  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1690                           
  1691                           ;pic18f_bootload.c: 331: TBLPTRH = frame.address_H;
  1692  00051E  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1693                           
  1694                           ;pic18f_bootload.c: 332: TBLPTRU = frame.address_U;
  1695  000522  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1696                           
  1697                           ;pic18f_bootload.c: 333: EECON1 = 0xC0;
  1698  000526  0EC0               	movlw	192
  1699  000528  6EA6               	movwf	4006,c	;volatile
  1700                           
  1701                           ;pic18f_bootload.c: 334: for (uint8_t i = 0; i < frame.data_length; i++)
  1702  00052A  0E00               	movlw	0
  1703  00052C  6E2B               	movwf	Read_Config@i,c
  1704  00052E  D010               	goto	l271
  1705  000530                     l272:
  1706                           
  1707                           ; BSR set to: 0
  1708  000530  0009               	tblrd		*+	;# 
  1709                           
  1710                           ;pic18f_bootload.c: 337: frame.data[i] = TABLAT;
  1711  000532  502B               	movf	Read_Config@i,w,c
  1712  000534  0D01               	mullw	1
  1713  000536  0E09               	movlw	9
  1714  000538  26F3               	addwf	prodl,f,c
  1715  00053A  0E00               	movlw	0
  1716  00053C  22F4               	addwfc	prodh,f,c
  1717  00053E  0E60               	movlw	low _frame
  1718  000540  24F3               	addwf	prodl,w,c
  1719  000542  6ED9               	movwf	fsr2l,c
  1720  000544  0E00               	movlw	high _frame
  1721  000546  20F4               	addwfc	prodh,w,c
  1722  000548  6EDA               	movwf	fsr2h,c
  1723  00054A  CFF5 FFDF          	movff	tablat,indf2	;volatile
  1724  00054E  2A2B               	incf	Read_Config@i,f,c
  1725  000550                     l271:
  1726  000550  502B               	movf	Read_Config@i,w,c
  1727  000552  6E29               	movwf	??_Read_Config& (0+255),c
  1728  000554  6A2A               	clrf	(??_Read_Config+1)& (0+255),c
  1729  000556  0100               	movlb	0	; () banked
  1730  000558  5161               	movf	(_frame+1)& (0+255),w,b
  1731  00055A  5C29               	subwf	??_Read_Config,w,c
  1732  00055C  0100               	movlb	0	; () banked
  1733  00055E  5162               	movf	(_frame+2)& (0+255),w,b
  1734  000560  582A               	subwfb	??_Read_Config+1,w,c
  1735  000562  A0D8               	btfss	status,0,c
  1736  000564  D7E5               	goto	l272
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;pic18f_bootload.c: 338: }
  1740                           ;pic18f_bootload.c: 339: return (9 + frame.data_length);
  1741                           
  1742                           ; BSR set to: 0
  1743  000566  0100               	movlb	0	; () banked
  1744  000568  5161               	movf	(_frame+1)& (0+255),w,b
  1745  00056A  0F09               	addlw	9
  1746  00056C  0012               	return	
  1747  00056E                     __end_of_Read_Config:
  1748                           	opt stack 0
  1749                           stkptr	equ	0xFFC
  1750                           pclatu	equ	0xFFB
  1751                           pclath	equ	0xFFA
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           prodh	equ	0xFF4
  1757                           prodl	equ	0xFF3
  1758                           intcon2	equ	0xFF1
  1759                           postinc0	equ	0xFEE
  1760                           fsr0h	equ	0xFEA
  1761                           fsr0l	equ	0xFE9
  1762                           wreg	equ	0xFE8
  1763                           fsr1h	equ	0xFE2
  1764                           fsr1l	equ	0xFE1
  1765                           indf2	equ	0xFDF
  1766                           postinc2	equ	0xFDE
  1767                           postdec2	equ	0xFDD
  1768                           fsr2h	equ	0xFDA
  1769                           fsr2l	equ	0xFD9
  1770                           status	equ	0xFD8
  1771                           
  1772 ;; *************** function _Get_Version_Data *****************
  1773 ;; Defined at:
  1774 ;;		line 220 in file "mcc_generated_files/pic18f_bootload.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  i               1   39[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      unsigned char 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        1 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    2
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_ProcessBootBuffer
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text11
  1803  0002DE                     __ptext11:
  1804                           	opt stack 0
  1805  0002DE                     _Get_Version_Data:
  1806                           	opt stack 24
  1807                           
  1808                           ;pic18f_bootload.c: 222: frame.data[0] = 0x19;
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;incstack = 0
  1812  0002DE  0E19               	movlw	25
  1813  0002E0  0100               	movlb	0	; () banked
  1814  0002E2  6F69               	movwf	(_frame+9)& (0+255),b
  1815                           
  1816                           ;pic18f_bootload.c: 223: frame.data[1] = 0x00;
  1817  0002E4  0E00               	movlw	0
  1818  0002E6  0100               	movlb	0	; () banked
  1819  0002E8  6F6A               	movwf	(_frame+10)& (0+255),b
  1820                           
  1821                           ;pic18f_bootload.c: 224: frame.data[2] = 0;
  1822  0002EA  0E00               	movlw	0
  1823  0002EC  0100               	movlb	0	; () banked
  1824  0002EE  6F6B               	movwf	(_frame+11)& (0+255),b
  1825                           
  1826                           ;pic18f_bootload.c: 225: frame.data[3] = 1;
  1827  0002F0  0E01               	movlw	1
  1828  0002F2  0100               	movlb	0	; () banked
  1829  0002F4  6F6C               	movwf	(_frame+12)& (0+255),b
  1830                           
  1831                           ;pic18f_bootload.c: 226: frame.data[4] = 0;
  1832  0002F6  0E00               	movlw	0
  1833  0002F8  0100               	movlb	0	; () banked
  1834  0002FA  6F6D               	movwf	(_frame+13)& (0+255),b
  1835                           
  1836                           ;pic18f_bootload.c: 227: frame.data[5] = 0;
  1837  0002FC  0E00               	movlw	0
  1838  0002FE  0100               	movlb	0	; () banked
  1839  000300  6F6E               	movwf	(_frame+14)& (0+255),b
  1840                           
  1841                           ;pic18f_bootload.c: 228: TBLPTRU = 0x3F;
  1842  000302  0E3F               	movlw	63
  1843  000304  6EF8               	movwf	tblptru,c	;volatile
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;pic18f_bootload.c: 229: TBLPTRH = 0xFF;
  1847  000306  68F7               	setf	tblptrh,c	;volatile
  1848                           
  1849                           ;pic18f_bootload.c: 230: TBLPTRL = 0xFE;
  1850  000308  0EFE               	movlw	254
  1851  00030A  6EF6               	movwf	tblptrl,c	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;pic18f_bootload.c: 231: EECON1bits.CFGS = 1;
  1855  00030C  8CA6               	bsf	4006,6,c	;volatile
  1856  00030E  0009               	tblrd		*+	;# 
  1857                           
  1858                           ;pic18f_bootload.c: 233: frame.data[6] = TABLAT;
  1859  000310  CFF5 F06F          	movff	tablat,_frame+15	;volatile
  1860  000314  0009               	tblrd		*+	;# 
  1861                           
  1862                           ;pic18f_bootload.c: 235: frame.data[7] = TABLAT;
  1863  000316  CFF5 F070          	movff	tablat,_frame+16	;volatile
  1864                           
  1865                           ;pic18f_bootload.c: 236: frame.data[8] = 0;
  1866  00031A  0E00               	movlw	0
  1867  00031C  0100               	movlb	0	; () banked
  1868  00031E  6F71               	movwf	(_frame+17)& (0+255),b
  1869                           
  1870                           ;pic18f_bootload.c: 237: frame.data[9] = 0;
  1871  000320  0E00               	movlw	0
  1872  000322  0100               	movlb	0	; () banked
  1873  000324  6F72               	movwf	(_frame+18)& (0+255),b
  1874                           
  1875                           ;pic18f_bootload.c: 239: frame.data[10] = 64;
  1876  000326  0E40               	movlw	64
  1877  000328  0100               	movlb	0	; () banked
  1878  00032A  6F73               	movwf	(_frame+19)& (0+255),b
  1879                           
  1880                           ;pic18f_bootload.c: 240: frame.data[11] = 64;
  1881  00032C  0E40               	movlw	64
  1882  00032E  0100               	movlb	0	; () banked
  1883  000330  6F74               	movwf	(_frame+20)& (0+255),b
  1884                           
  1885                           ;pic18f_bootload.c: 242: TBLPTRU = 0x30;
  1886  000332  0E30               	movlw	48
  1887  000334  6EF8               	movwf	tblptru,c	;volatile
  1888                           
  1889                           ;pic18f_bootload.c: 243: TBLPTRH = 0x00;
  1890  000336  0E00               	movlw	0
  1891  000338  6EF7               	movwf	tblptrh,c	;volatile
  1892                           
  1893                           ;pic18f_bootload.c: 244: TBLPTRL = 0x00;
  1894  00033A  0E00               	movlw	0
  1895  00033C  6EF6               	movwf	tblptrl,c	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;pic18f_bootload.c: 245: EECON1bits.CFGS = 1;
  1899  00033E  8CA6               	bsf	4006,6,c	;volatile
  1900                           
  1901                           ;pic18f_bootload.c: 246: for (uint8_t i= 12; i < 16; i++)
  1902  000340  0E0C               	movlw	12
  1903  000342  6E29               	movwf	Get_Version_Data@i,c
  1904  000344                     l1612:
  1905                           
  1906                           ; BSR set to: 0
  1907  000344  0E0F               	movlw	15
  1908  000346  6429               	cpfsgt	Get_Version_Data@i,c
  1909  000348  D001               	goto	l249
  1910  00034A  D011               	goto	u660
  1911  00034C                     l249:
  1912  00034C  0009               	tblrd		*+	;# 
  1913                           
  1914                           ;pic18f_bootload.c: 249: frame.data[i] = TABLAT;
  1915  00034E  5029               	movf	Get_Version_Data@i,w,c
  1916  000350  0D01               	mullw	1
  1917  000352  0E09               	movlw	9
  1918  000354  26F3               	addwf	prodl,f,c
  1919  000356  0E00               	movlw	0
  1920  000358  22F4               	addwfc	prodh,f,c
  1921  00035A  0E60               	movlw	low _frame
  1922  00035C  24F3               	addwf	prodl,w,c
  1923  00035E  6ED9               	movwf	fsr2l,c
  1924  000360  0E00               	movlw	high _frame
  1925  000362  20F4               	addwfc	prodh,w,c
  1926  000364  6EDA               	movwf	fsr2h,c
  1927  000366  CFF5 FFDF          	movff	tablat,indf2	;volatile
  1928  00036A  2A29               	incf	Get_Version_Data@i,f,c
  1929  00036C  D7EB               	goto	l1612
  1930  00036E                     u660:
  1931                           
  1932                           ;pic18f_bootload.c: 250: }
  1933                           ;pic18f_bootload.c: 252: return 25;
  1934  00036E  0E19               	movlw	25
  1935  000370  0012               	return	
  1936  000372                     __end_of_Get_Version_Data:
  1937                           	opt stack 0
  1938                           stkptr	equ	0xFFC
  1939                           pclatu	equ	0xFFB
  1940                           pclath	equ	0xFFA
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           intcon2	equ	0xFF1
  1948                           postinc0	equ	0xFEE
  1949                           fsr0h	equ	0xFEA
  1950                           fsr0l	equ	0xFE9
  1951                           wreg	equ	0xFE8
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           indf2	equ	0xFDF
  1955                           postinc2	equ	0xFDE
  1956                           postdec2	equ	0xFDD
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function _Erase_Flash *****************
  1962 ;; Defined at:
  1963 ;;		line 299 in file "mcc_generated_files/pic18f_bootload.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  i               2   39[COMRAM] unsigned int 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      unsigned char 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;Total ram usage:        2 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    3
  1984 ;; This function calls:
  1985 ;;		_StartWrite
  1986 ;; This function is called by:
  1987 ;;		_ProcessBootBuffer
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text12
  1992  00045E                     __ptext12:
  1993                           	opt stack 0
  1994  00045E                     _Erase_Flash:
  1995                           	opt stack 23
  1996                           
  1997                           ;pic18f_bootload.c: 301: TBLPTRL = frame.address_L;
  1998                           
  1999                           ;incstack = 0
  2000  00045E  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2001                           
  2002                           ;pic18f_bootload.c: 302: TBLPTRH = frame.address_H;
  2003  000462  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2004                           
  2005                           ;pic18f_bootload.c: 303: TBLPTRU = frame.address_U;
  2006  000466  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2007                           
  2008                           ;pic18f_bootload.c: 304: for (uint16_t i=0; i < frame.data_length; i++)
  2009  00046A  0E00               	movlw	0
  2010  00046C  6E2A               	movwf	Erase_Flash@i+1,c
  2011  00046E  0E00               	movlw	0
  2012  000470  6E29               	movwf	Erase_Flash@i,c
  2013  000472  D014               	goto	l264
  2014  000474                     
  2015                           ;pic18f_bootload.c: 305: {
  2016                           ;pic18f_bootload.c: 306: if (TBLPTR >= 65536)
  2017  000474  04F8               	decf	tblptru,w,c	;volatile
  2018  000476  A0D8               	btfss	status,0,c
  2019  000478  D005               	goto	l266
  2020                           
  2021                           ;pic18f_bootload.c: 307: {
  2022                           ;pic18f_bootload.c: 308: frame.data[0] = 0xFE;
  2023  00047A  0EFE               	movlw	254
  2024  00047C  0100               	movlb	0	; () banked
  2025  00047E  6F69               	movwf	(_frame+9)& (0+255),b
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;pic18f_bootload.c: 309: return (10);
  2029  000480  0E0A               	movlw	10
  2030                           
  2031                           ; BSR set to: 0
  2032  000482  0012               	return	
  2033  000484                     l266:
  2034                           
  2035                           ;pic18f_bootload.c: 310: }
  2036                           ;pic18f_bootload.c: 311: EECON1 = 0x94;
  2037                           
  2038                           ; BSR set to: 0
  2039  000484  0E94               	movlw	148
  2040  000486  6EA6               	movwf	4006,c	;volatile
  2041                           
  2042                           ;pic18f_bootload.c: 312: StartWrite();
  2043  000488  EC2C  F003         	call	_StartWrite	;wreg free
  2044                           
  2045                           ;pic18f_bootload.c: 313: TBLPTR += 64;
  2046  00048C  0E40               	movlw	64
  2047  00048E  26F6               	addwf	tblptrl,f,c	;volatile
  2048  000490  0E00               	movlw	0
  2049  000492  22F7               	addwfc	tblptrh,f,c	;volatile
  2050  000494  0E00               	movlw	0
  2051  000496  22F8               	addwfc	tblptru,f,c	;volatile
  2052  000498  4A29               	infsnz	Erase_Flash@i,f,c
  2053  00049A  2A2A               	incf	Erase_Flash@i+1,f,c
  2054  00049C                     l264:
  2055  00049C  0100               	movlb	0	; () banked
  2056  00049E  5161               	movf	(_frame+1)& (0+255),w,b
  2057  0004A0  5C29               	subwf	Erase_Flash@i,w,c
  2058  0004A2  0100               	movlb	0	; () banked
  2059  0004A4  5162               	movf	(_frame+2)& (0+255),w,b
  2060  0004A6  582A               	subwfb	Erase_Flash@i+1,w,c
  2061  0004A8  A0D8               	btfss	status,0,c
  2062  0004AA  D7E4               	goto	l265
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;pic18f_bootload.c: 314: }
  2066                           ;pic18f_bootload.c: 315: frame.data[0] = 0x01;
  2067                           
  2068                           ; BSR set to: 0
  2069  0004AC  0E01               	movlw	1
  2070  0004AE  0100               	movlb	0	; () banked
  2071  0004B0  6F69               	movwf	(_frame+9)& (0+255),b
  2072                           
  2073                           ;pic18f_bootload.c: 316: frame.EE_key_1 = 0x00;
  2074  0004B2  0E00               	movlw	0
  2075  0004B4  0100               	movlb	0	; () banked
  2076  0004B6  6F63               	movwf	(_frame+3)& (0+255),b
  2077                           
  2078                           ;pic18f_bootload.c: 317: frame.EE_key_2 = 0x00;
  2079  0004B8  0E00               	movlw	0
  2080  0004BA  0100               	movlb	0	; () banked
  2081  0004BC  6F64               	movwf	(_frame+4)& (0+255),b
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;pic18f_bootload.c: 318: return (10);
  2085  0004BE  0E0A               	movlw	10
  2086  0004C0  0012               	return	
  2087  0004C2                     __end_of_Erase_Flash:
  2088                           	opt stack 0
  2089                           stkptr	equ	0xFFC
  2090                           pclatu	equ	0xFFB
  2091                           pclath	equ	0xFFA
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           prodh	equ	0xFF4
  2097                           prodl	equ	0xFF3
  2098                           intcon2	equ	0xFF1
  2099                           postinc0	equ	0xFEE
  2100                           fsr0h	equ	0xFEA
  2101                           fsr0l	equ	0xFE9
  2102                           wreg	equ	0xFE8
  2103                           fsr1h	equ	0xFE2
  2104                           fsr1l	equ	0xFE1
  2105                           indf2	equ	0xFDF
  2106                           postinc2	equ	0xFDE
  2107                           postdec2	equ	0xFDD
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _StartWrite *****************
  2113 ;; Defined at:
  2114 ;;		line 401 in file "mcc_generated_files/pic18f_bootload.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		None
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    2
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_Write_Flash
  2139 ;;		_Erase_Flash
  2140 ;;		_Write_Config
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text13
  2145  000658                     __ptext13:
  2146                           	opt stack 0
  2147  000658                     _StartWrite:
  2148                           	opt stack 23
  2149                           
  2150                           ;pic18f_bootload.c: 403: EECON2 = EE_Key_1;
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;incstack = 0
  2154  000658  C000 FFA7          	movff	0,4007	;volatile
  2155                           
  2156                           ;pic18f_bootload.c: 404: EECON2 = EE_Key_2;
  2157  00065C  C001 FFA7          	movff	1,4007	;volatile
  2158                           
  2159                           ;pic18f_bootload.c: 405: EECON1bits.WR = 1;
  2160  000660  82A6               	bsf	4006,1,c	;volatile
  2161                           
  2162                           ;pic18f_bootload.c: 406: return;
  2163  000662  0012               	return		;funcret
  2164  000664                     __end_of_StartWrite:
  2165                           	opt stack 0
  2166                           stkptr	equ	0xFFC
  2167                           pclatu	equ	0xFFB
  2168                           pclath	equ	0xFFA
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           prodh	equ	0xFF4
  2174                           prodl	equ	0xFF3
  2175                           intcon2	equ	0xFF1
  2176                           postinc0	equ	0xFEE
  2177                           fsr0h	equ	0xFEA
  2178                           fsr0l	equ	0xFE9
  2179                           wreg	equ	0xFE8
  2180                           fsr1h	equ	0xFE2
  2181                           fsr1l	equ	0xFE1
  2182                           indf2	equ	0xFDF
  2183                           postinc2	equ	0xFDE
  2184                           postdec2	equ	0xFDD
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8
  2188                           
  2189 ;; *************** function _Calc_Checksum *****************
  2190 ;; Defined at:
  2191 ;;		line 378 in file "mcc_generated_files/pic18f_bootload.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  i               2   39[COMRAM] unsigned int 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        2 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    2
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_ProcessBootBuffer
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text14
  2220  0004C2                     __ptext14:
  2221                           	opt stack 0
  2222  0004C2                     _Calc_Checksum:
  2223                           	opt stack 24
  2224                           
  2225                           ;pic18f_bootload.c: 380: TBLPTRL = frame.address_L;
  2226                           
  2227                           ;incstack = 0
  2228  0004C2  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2229                           
  2230                           ;pic18f_bootload.c: 381: TBLPTRH = frame.address_H;
  2231  0004C6  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2232                           
  2233                           ;pic18f_bootload.c: 382: TBLPTRU = frame.address_U;
  2234  0004CA  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2235                           
  2236                           ;pic18f_bootload.c: 383: EECON1 = 0x80;
  2237  0004CE  0E80               	movlw	128
  2238  0004D0  6EA6               	movwf	4006,c	;volatile
  2239                           
  2240                           ;pic18f_bootload.c: 384: check_sum = 0;
  2241  0004D2  0E00               	movlw	0
  2242  0004D4  6E34               	movwf	_check_sum+1,c
  2243  0004D6  0E00               	movlw	0
  2244  0004D8  6E33               	movwf	_check_sum,c
  2245                           
  2246                           ;pic18f_bootload.c: 385: for (uint16_t i = 0;i < frame.data_length; i += 2)
  2247  0004DA  0E00               	movlw	0
  2248  0004DC  6E2A               	movwf	Calc_Checksum@i+1,c
  2249  0004DE  0E00               	movlw	0
  2250  0004E0  6E29               	movwf	Calc_Checksum@i,c
  2251  0004E2  D00C               	goto	l285
  2252  0004E4                     l286:
  2253                           
  2254                           ; BSR set to: 0
  2255  0004E4  0009               	tblrd		*+	;# 
  2256                           
  2257                           ;pic18f_bootload.c: 388: check_sum += (uint16_t)TABLAT;
  2258  0004E6  50F5               	movf	tablat,w,c	;volatile
  2259  0004E8  2633               	addwf	_check_sum,f,c
  2260  0004EA  0E00               	movlw	0
  2261  0004EC  2234               	addwfc	_check_sum+1,f,c
  2262  0004EE  0009               	tblrd		*+	;# 
  2263                           
  2264                           ;pic18f_bootload.c: 390: check_sum += (uint16_t)TABLAT << 8;
  2265  0004F0  50F5               	movf	tablat,w,c	;volatile
  2266  0004F2  2634               	addwf	_check_sum+1,f,c
  2267  0004F4  0E02               	movlw	2
  2268  0004F6  2629               	addwf	Calc_Checksum@i,f,c
  2269  0004F8  0E00               	movlw	0
  2270  0004FA  222A               	addwfc	Calc_Checksum@i+1,f,c
  2271  0004FC                     l285:
  2272  0004FC  0100               	movlb	0	; () banked
  2273  0004FE  5161               	movf	(_frame+1)& (0+255),w,b
  2274  000500  5C29               	subwf	Calc_Checksum@i,w,c
  2275  000502  0100               	movlb	0	; () banked
  2276  000504  5162               	movf	(_frame+2)& (0+255),w,b
  2277  000506  582A               	subwfb	Calc_Checksum@i+1,w,c
  2278  000508  A0D8               	btfss	status,0,c
  2279  00050A  D7EC               	goto	l286
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;pic18f_bootload.c: 391: }
  2283                           ;pic18f_bootload.c: 392: frame.data[0] = (uint8_t) (check_sum & 0x00FF);
  2284  00050C  C033  F069         	movff	_check_sum,_frame+9
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;pic18f_bootload.c: 393: frame.data[1] = (uint8_t)((check_sum & 0xFF00) >> 8);
  2288  000510  5034               	movf	_check_sum+1,w,c
  2289  000512  0100               	movlb	0	; () banked
  2290  000514  6F6A               	movwf	(_frame+10)& (0+255),b
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;pic18f_bootload.c: 394: return (11);
  2294  000516  0E0B               	movlw	11
  2295  000518  0012               	return	
  2296  00051A                     __end_of_Calc_Checksum:
  2297                           	opt stack 0
  2298                           stkptr	equ	0xFFC
  2299                           pclatu	equ	0xFFB
  2300                           pclath	equ	0xFFA
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           intcon2	equ	0xFF1
  2308                           postinc0	equ	0xFEE
  2309                           fsr0h	equ	0xFEA
  2310                           fsr0l	equ	0xFE9
  2311                           wreg	equ	0xFE8
  2312                           fsr1h	equ	0xFE2
  2313                           fsr1l	equ	0xFE1
  2314                           indf2	equ	0xFDF
  2315                           postinc2	equ	0xFDE
  2316                           postdec2	equ	0xFDD
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8
  2320                           
  2321 ;; *************** function _EUSART1_Write *****************
  2322 ;; Defined at:
  2323 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  txData          1    wreg     unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  txData          1   39[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;Total ram usage:        1 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    2
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_Run_Bootloader
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text15
  2352  000664                     __ptext15:
  2353                           	opt stack 0
  2354  000664                     _EUSART1_Write:
  2355                           	opt stack 25
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;incstack = 0
  2359                           ;EUSART1_Write@txData stored from wreg
  2360  000664  6E29               	movwf	EUSART1_Write@txData,c
  2361  000666                     
  2362                           ;eusart1.c: 99: {
  2363                           
  2364                           ;eusart1.c: 98: while(0 == PIR1bits.TX1IF)
  2365  000666  A89E               	btfss	3998,4,c	;volatile
  2366  000668  D7FE               	goto	l1748
  2367                           
  2368                           ;eusart1.c: 100: }
  2369                           ;eusart1.c: 102: TXREG1 = txData;
  2370  00066A  C029  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2371  00066E  0012               	return		;funcret
  2372  000670                     __end_of_EUSART1_Write:
  2373                           	opt stack 0
  2374                           stkptr	equ	0xFFC
  2375                           pclatu	equ	0xFFB
  2376                           pclath	equ	0xFFA
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           prodh	equ	0xFF4
  2382                           prodl	equ	0xFF3
  2383                           intcon2	equ	0xFF1
  2384                           postinc0	equ	0xFEE
  2385                           fsr0h	equ	0xFEA
  2386                           fsr0l	equ	0xFE9
  2387                           wreg	equ	0xFE8
  2388                           fsr1h	equ	0xFE2
  2389                           fsr1l	equ	0xFE1
  2390                           indf2	equ	0xFDF
  2391                           postinc2	equ	0xFDE
  2392                           postdec2	equ	0xFDD
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _EUSART1_Read *****************
  2398 ;; Defined at:
  2399 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      unsigned char 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    2
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_Run_Bootloader
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text16
  2428  000648                     __ptext16:
  2429                           	opt stack 0
  2430  000648                     _EUSART1_Read:
  2431                           	opt stack 25
  2432                           
  2433                           ;eusart1.c: 81: {
  2434                           
  2435                           ;eusart1.c: 80: while(!PIR1bits.RC1IF)
  2436                           
  2437                           ;incstack = 0
  2438  000648  AA9E               	btfss	3998,5,c	;volatile
  2439  00064A  D7FE               	goto	_EUSART1_Read
  2440                           
  2441                           ;eusart1.c: 82: }
  2442                           ;eusart1.c: 85: if(1 == RCSTA1bits.OERR)
  2443  00064C  A2AB               	btfss	4011,1,c	;volatile
  2444  00064E  D002               	goto	l67
  2445                           
  2446                           ;eusart1.c: 86: {
  2447                           ;eusart1.c: 89: RCSTA1bits.SPEN = 0;
  2448  000650  9EAB               	bcf	4011,7,c	;volatile
  2449                           
  2450                           ;eusart1.c: 90: RCSTA1bits.SPEN = 1;
  2451  000652  8EAB               	bsf	4011,7,c	;volatile
  2452  000654                     l67:
  2453                           
  2454                           ;eusart1.c: 91: }
  2455                           ;eusart1.c: 93: return RCREG1;
  2456  000654  50AE               	movf	4014,w,c	;volatile
  2457  000656  0012               	return	
  2458  000658                     __end_of_EUSART1_Read:
  2459                           	opt stack 0
  2460                           stkptr	equ	0xFFC
  2461                           pclatu	equ	0xFFB
  2462                           pclath	equ	0xFFA
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           prodh	equ	0xFF4
  2468                           prodl	equ	0xFF3
  2469                           intcon2	equ	0xFF1
  2470                           postinc0	equ	0xFEE
  2471                           fsr0h	equ	0xFEA
  2472                           fsr0l	equ	0xFE9
  2473                           wreg	equ	0xFE8
  2474                           fsr1h	equ	0xFE2
  2475                           fsr1l	equ	0xFE1
  2476                           indf2	equ	0xFDF
  2477                           postinc2	equ	0xFDE
  2478                           postdec2	equ	0xFDD
  2479                           fsr2h	equ	0xFDA
  2480                           fsr2l	equ	0xFD9
  2481                           status	equ	0xFD8
  2482                           
  2483 ;; *************** function _Check_Device_Reset *****************
  2484 ;; Defined at:
  2485 ;;		line 414 in file "mcc_generated_files/pic18f_bootload.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    2
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_Run_Bootloader
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text17
  2514  000670                     __ptext17:
  2515                           	opt stack 0
  2516  000670                     _Check_Device_Reset:
  2517                           	opt stack 25
  2518                           
  2519                           ;pic18f_bootload.c: 416: if (reset_pending == 1)
  2520                           
  2521                           ;incstack = 0
  2522  000670  0435               	decf	_reset_pending,w,c
  2523  000672  A4D8               	btfss	status,2,c
  2524  000674  0012               	return	
  2525  000676  00FF               	reset		;# 
  2526  000678  0012               	return	
  2527  00067A                     __end_of_Check_Device_Reset:
  2528                           	opt stack 0
  2529                           stkptr	equ	0xFFC
  2530                           pclatu	equ	0xFFB
  2531                           pclath	equ	0xFFA
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           prodh	equ	0xFF4
  2537                           prodl	equ	0xFF3
  2538                           intcon2	equ	0xFF1
  2539                           postinc0	equ	0xFEE
  2540                           fsr0h	equ	0xFEA
  2541                           fsr0l	equ	0xFE9
  2542                           wreg	equ	0xFE8
  2543                           fsr1h	equ	0xFE2
  2544                           fsr1l	equ	0xFE1
  2545                           indf2	equ	0xFDF
  2546                           postinc2	equ	0xFDE
  2547                           postdec2	equ	0xFDD
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _Bootload_Required *****************
  2553 ;; Defined at:
  2554 ;;		line 153 in file "mcc_generated_files/pic18f_bootload.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      unsigned char 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    2
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_BOOTLOADER_Initialize
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text18
  2583  0005D8                     __ptext18:
  2584                           	opt stack 0
  2585  0005D8                     _Bootload_Required:
  2586                           	opt stack 26
  2587                           
  2588                           ;pic18f_bootload.c: 161: TBLPTR = 0x800;
  2589                           
  2590                           ;incstack = 0
  2591  0005D8  0E00               	movlw	0
  2592  0005DA  6EF6               	movwf	tblptrl,c	;volatile
  2593  0005DC  0E08               	movlw	8
  2594  0005DE  6EF7               	movwf	tblptrh,c	;volatile
  2595  0005E0  0E00               	movlw	0
  2596  0005E2  6EF8               	movwf	tblptru,c	;volatile
  2597                           
  2598                           ;pic18f_bootload.c: 165: EECON1 = 0x80;
  2599  0005E4  0E80               	movlw	128
  2600  0005E6  6EA6               	movwf	4006,c	;volatile
  2601  0005E8  0009               	tblrd		*+	;# 
  2602                           
  2603                           ;pic18f_bootload.c: 167: if (TABLAT == 0xFF)
  2604  0005EA  28F5               	incf	tablat,w,c	;volatile
  2605  0005EC  A4D8               	btfss	status,2,c
  2606  0005EE  D002               	goto	l232
  2607                           
  2608                           ;pic18f_bootload.c: 168: {
  2609                           ;pic18f_bootload.c: 169: return (1);
  2610  0005F0  0E01               	movlw	1
  2611  0005F2  0012               	return	
  2612  0005F4                     l232:
  2613                           
  2614                           ;pic18f_bootload.c: 170: }
  2615                           ;pic18f_bootload.c: 171: return (0);
  2616  0005F4  0E00               	movlw	0
  2617  0005F6  0012               	return	
  2618  0005F8                     __end_of_Bootload_Required:
  2619                           	opt stack 0
  2620                           stkptr	equ	0xFFC
  2621                           pclatu	equ	0xFFB
  2622                           pclath	equ	0xFFA
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           intcon2	equ	0xFF1
  2630                           postinc0	equ	0xFEE
  2631                           fsr0h	equ	0xFEA
  2632                           fsr0l	equ	0xFE9
  2633                           wreg	equ	0xFE8
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           indf2	equ	0xFDF
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _service_isr_low *****************
  2644 ;; Defined at:
  2645 ;;		line 134 in file "mcc_generated_files/pic18f_bootload.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		None
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;Total ram usage:       21 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		Interrupt level 1
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	intcodelo
  2674  000018                     __pintcodelo:
  2675                           	opt stack 0
  2676  000018                     _service_isr_low:
  2677                           	opt stack 23
  2678                           
  2679                           ;incstack = 0
  2680  000018  8039               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2681  00001A  CFD8 F014          	movff	status,??_service_isr_low
  2682  00001E  CFE8 F015          	movff	wreg,??_service_isr_low+1
  2683  000022  CFE0 F016          	movff	bsr,??_service_isr_low+2
  2684  000026  CFFA F017          	movff	pclath,??_service_isr_low+3
  2685  00002A  CFFB F018          	movff	pclatu,??_service_isr_low+4
  2686  00002E  CFE9 F019          	movff	fsr0l,??_service_isr_low+5
  2687  000032  CFEA F01A          	movff	fsr0h,??_service_isr_low+6
  2688  000036  CFE1 F01B          	movff	fsr1l,??_service_isr_low+7
  2689  00003A  CFE2 F01C          	movff	fsr1h,??_service_isr_low+8
  2690  00003E  CFD9 F01D          	movff	fsr2l,??_service_isr_low+9
  2691  000042  CFDA F01E          	movff	fsr2h,??_service_isr_low+10
  2692  000046  CFF3 F01F          	movff	prodl,??_service_isr_low+11
  2693  00004A  CFF4 F020          	movff	prodh,??_service_isr_low+12
  2694  00004E  CFF6 F021          	movff	tblptrl,??_service_isr_low+13
  2695  000052  CFF7 F022          	movff	tblptrh,??_service_isr_low+14
  2696  000056  CFF8 F023          	movff	tblptru,??_service_isr_low+15
  2697  00005A  CFF5 F024          	movff	tablat,??_service_isr_low+16
  2698  00005E  C039  F025         	movff	btemp,??_service_isr_low+17
  2699  000062  C03A  F026         	movff	btemp+1,??_service_isr_low+18
  2700  000066  C03B  F027         	movff	btemp+2,??_service_isr_low+19
  2701  00006A  C03C  F028         	movff	btemp+3,??_service_isr_low+20
  2702  00006E  EF04 F004          	goto	2056	;# 
  2703  000072  C028  F03C         	movff	??_service_isr_low+20,btemp+3
  2704  000076  C027  F03B         	movff	??_service_isr_low+19,btemp+2
  2705  00007A  C026  F03A         	movff	??_service_isr_low+18,btemp+1
  2706  00007E  C025  F039         	movff	??_service_isr_low+17,btemp
  2707  000082  C024  FFF5         	movff	??_service_isr_low+16,tablat
  2708  000086  C023  FFF8         	movff	??_service_isr_low+15,tblptru
  2709  00008A  C022  FFF7         	movff	??_service_isr_low+14,tblptrh
  2710  00008E  C021  FFF6         	movff	??_service_isr_low+13,tblptrl
  2711  000092  C020  FFF4         	movff	??_service_isr_low+12,prodh
  2712  000096  C01F  FFF3         	movff	??_service_isr_low+11,prodl
  2713  00009A  C01E  FFDA         	movff	??_service_isr_low+10,fsr2h
  2714  00009E  C01D  FFD9         	movff	??_service_isr_low+9,fsr2l
  2715  0000A2  C01C  FFE2         	movff	??_service_isr_low+8,fsr1h
  2716  0000A6  C01B  FFE1         	movff	??_service_isr_low+7,fsr1l
  2717  0000AA  C01A  FFEA         	movff	??_service_isr_low+6,fsr0h
  2718  0000AE  C019  FFE9         	movff	??_service_isr_low+5,fsr0l
  2719  0000B2  C018  FFFB         	movff	??_service_isr_low+4,pclatu
  2720  0000B6  C017  FFFA         	movff	??_service_isr_low+3,pclath
  2721  0000BA  C016  FFE0         	movff	??_service_isr_low+2,bsr
  2722  0000BE  C015  FFE8         	movff	??_service_isr_low+1,wreg
  2723  0000C2  C014  FFD8         	movff	??_service_isr_low,status
  2724  0000C6  9039               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2725  0000C8  0010               	retfie	
  2726  0000CA                     __end_of_service_isr_low:
  2727                           	opt stack 0
  2728                           stkptr	equ	0xFFC
  2729                           pclatu	equ	0xFFB
  2730                           pclath	equ	0xFFA
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon2	equ	0xFF1
  2738                           postinc0	equ	0xFEE
  2739                           fsr0h	equ	0xFEA
  2740                           fsr0l	equ	0xFE9
  2741                           wreg	equ	0xFE8
  2742                           fsr1h	equ	0xFE2
  2743                           fsr1l	equ	0xFE1
  2744                           bsr	equ	0xFE0
  2745                           indf2	equ	0xFDF
  2746                           postinc2	equ	0xFDE
  2747                           postdec2	equ	0xFDD
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function _service_isr_high *****************
  2753 ;; Defined at:
  2754 ;;		line 128 in file "mcc_generated_files/pic18f_bootload.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		None
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:       18 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		Interrupt level 2
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	intcode
  2782  000008                     __pintcode:
  2783                           	opt stack 0
  2784  000008                     _service_isr_high:
  2785                           	opt stack 23
  2786                           
  2787                           ;incstack = 0
  2788  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2789  00000A  EF23  F001         	goto	int_func
  2790                           stkptr	equ	0xFFC
  2791                           pclatu	equ	0xFFB
  2792                           pclath	equ	0xFFA
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           intcon2	equ	0xFF1
  2800                           postinc0	equ	0xFEE
  2801                           fsr0h	equ	0xFEA
  2802                           fsr0l	equ	0xFE9
  2803                           wreg	equ	0xFE8
  2804                           fsr1h	equ	0xFE2
  2805                           fsr1l	equ	0xFE1
  2806                           bsr	equ	0xFE0
  2807                           indf2	equ	0xFDF
  2808                           postinc2	equ	0xFDE
  2809                           postdec2	equ	0xFDD
  2810                           fsr2h	equ	0xFDA
  2811                           fsr2l	equ	0xFD9
  2812                           status	equ	0xFD8
  2813                           stkptr	equ	0xFFC
  2814                           pclatu	equ	0xFFB
  2815                           pclath	equ	0xFFA
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon2	equ	0xFF1
  2823                           postinc0	equ	0xFEE
  2824                           fsr0h	equ	0xFEA
  2825                           fsr0l	equ	0xFE9
  2826                           wreg	equ	0xFE8
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           bsr	equ	0xFE0
  2830                           indf2	equ	0xFDF
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837                           	psect	rparam
  2838  0000                     stkptr	equ	0xFFC
  2839                           pclatu	equ	0xFFB
  2840                           pclath	equ	0xFFA
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           intcon2	equ	0xFF1
  2848                           postinc0	equ	0xFEE
  2849                           fsr0h	equ	0xFEA
  2850                           fsr0l	equ	0xFE9
  2851                           wreg	equ	0xFE8
  2852                           fsr1h	equ	0xFE2
  2853                           fsr1l	equ	0xFE1
  2854                           bsr	equ	0xFE0
  2855                           indf2	equ	0xFDF
  2856                           postinc2	equ	0xFDE
  2857                           postdec2	equ	0xFDD
  2858                           fsr2h	equ	0xFDA
  2859                           fsr2l	equ	0xFD9
  2860                           status	equ	0xFD8
  2861                           
  2862                           	psect	temp
  2863  000039                     btemp:
  2864                           	opt stack 0
  2865  000039                     	ds	1
  2866  0000                     int$flags	set	btemp
  2867  0000                     wtemp6	set	btemp+1
  2868                           stkptr	equ	0xFFC
  2869                           pclatu	equ	0xFFB
  2870                           pclath	equ	0xFFA
  2871                           tblptru	equ	0xFF8
  2872                           tblptrh	equ	0xFF7
  2873                           tblptrl	equ	0xFF6
  2874                           tablat	equ	0xFF5
  2875                           prodh	equ	0xFF4
  2876                           prodl	equ	0xFF3
  2877                           intcon2	equ	0xFF1
  2878                           postinc0	equ	0xFEE
  2879                           fsr0h	equ	0xFEA
  2880                           fsr0l	equ	0xFE9
  2881                           wreg	equ	0xFE8
  2882                           fsr1h	equ	0xFE2
  2883                           fsr1l	equ	0xFE1
  2884                           bsr	equ	0xFE0
  2885                           indf2	equ	0xFDF
  2886                           postinc2	equ	0xFDE
  2887                           postdec2	equ	0xFDD
  2888                           fsr2h	equ	0xFDA
  2889                           fsr2l	equ	0xFD9
  2890                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      55
    BANK0           160      3      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Run_Bootloader->_ProcessBootBuffer
    _ProcessBootBuffer->_Write_Flash

Critical Paths under _service_isr_low in COMRAM

    None.

Critical Paths under _service_isr_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _BOOTLOADER_Initialize->_Run_Bootloader

Critical Paths under _service_isr_low in BANK0

    None.

Critical Paths under _service_isr_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service_isr_low in BANK1

    None.

Critical Paths under _service_isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service_isr_low in BANK2

    None.

Critical Paths under _service_isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service_isr_low in BANK3

    None.

Critical Paths under _service_isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service_isr_low in BANK4

    None.

Critical Paths under _service_isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service_isr_low in BANK5

    None.

Critical Paths under _service_isr_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service_isr_low in BANK6

    None.

Critical Paths under _service_isr_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service_isr_low in BANK7

    None.

Critical Paths under _service_isr_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service_isr_low in BANK8

    None.

Critical Paths under _service_isr_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service_isr_low in BANK9

    None.

Critical Paths under _service_isr_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service_isr_low in BANK10

    None.

Critical Paths under _service_isr_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service_isr_low in BANK11

    None.

Critical Paths under _service_isr_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service_isr_low in BANK12

    None.

Critical Paths under _service_isr_high in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service_isr_low in BANK13

    None.

Critical Paths under _service_isr_high in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service_isr_low in BANK14

    None.

Critical Paths under _service_isr_high in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service_isr_low in BANK15

    None.

Critical Paths under _service_isr_high in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     769
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     769
              _BOOTLOADER_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BOOTLOADER_Initialize                                0     0      0     769
                  _Bootload_Required
                     _Run_Bootloader
 ---------------------------------------------------------------------------------
 (3) _Run_Bootloader                                       3     3      0     769
                                              0 BANK0      3     3      0
                 _Check_Device_Reset
                       _EUSART1_Read
                      _EUSART1_Write
                  _ProcessBootBuffer
 ---------------------------------------------------------------------------------
 (4) _ProcessBootBuffer                                    1     1      0     463
                                             46 COMRAM     1     1      0
                      _Calc_Checksum
                        _Erase_Flash
                   _Get_Version_Data
                        _Read_Config
                       _Write_Config
                        _Write_Flash
 ---------------------------------------------------------------------------------
 (5) _Write_Flash                                          7     7      0      99
                                             39 COMRAM     7     7      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Write_Config                                         3     3      0      68
                                             39 COMRAM     3     3      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Read_Config                                          3     3      0      68
                                             39 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _Get_Version_Data                                     1     1      0      99
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Erase_Flash                                          2     2      0      37
                                             39 COMRAM     2     2      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (6) _StartWrite                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Calc_Checksum                                        2     2      0      37
                                             39 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Check_Device_Reset                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Bootload_Required                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _service_isr_low                                     21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _service_isr_high                                    18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _BOOTLOADER_Initialize
       _Bootload_Required
       _Run_Bootloader
         _Check_Device_Reset
         _EUSART1_Read
         _EUSART1_Write
         _ProcessBootBuffer
           _Calc_Checksum
           _Erase_Flash
             _StartWrite
           _Get_Version_Data
           _Read_Config
           _Write_Config
             _StartWrite
           _Write_Flash
             _StartWrite
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _service_isr_low (ROOT)

 _service_isr_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F36      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      4C       5       47.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      37       1       58.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83      12        0.0%
DATA                 0      0      83       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Sep 25 10:36:06 2017

                  ??_Erase_Flash 0029                               l67 0654  
                             bsr 000FE0           __size_of_Calc_Checksum 0058  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l232 05F4                              l240 0400  
                            l320 00E2                              l241 0406  
                            l242 040C                              l330 016C  
                            l243 0412                              l323 00F8  
                            l236 042A                              l244 0418  
                            l245 0420                              l237 03F4  
                            l325 014A                              l341 067E  
                            l254 021E                              l238 045A  
                            l271 0550                              l255 01AC  
                            l239 03FA                              l319 00D8  
                            l159 0642                              l264 049C  
                            l272 0530                              l280 039C  
                            l256 01D8                              l265 0474  
                            l249 034C                              l329 0188  
                            l266 0484                              l258 021C  
                            l285 04FC                              l277 0392  
                            l286 04E4                              l279 03C2  
           __size_of_Write_Flash 00B0                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                              u660 036E  
                            u690 0214                              u870 0142  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAC            _BOOTLOADER_Initialize 060E  
                   __CFG_LVP$OFF 000000                             l1612 0344  
                           l1646 021C                             l1748 0666  
                           _LATA 000F89                             _LATB 000F8A  
          __size_of_Write_Config 0078                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           _WPUB 000F61                    _EUSART1_Write 0664  
                           _main 067A                    ?_EUSART1_Read 0002  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0039  
                  __CFG_BORV$285 000000                             prodh 000FF4  
                           prodl 000FF3                             start 00CA  
                  __CFG_IESO$OFF 000000                     ___param_bank 000000  
                  ??_Read_Config 0029         __size_of_service_isr_low 00B2  
     __size_of_ProcessBootBuffer 0074   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 0648                            ?_main 0002  
                          _EEADR 000FA9              __end_of_Erase_Flash 04C2  
                 __CFG_DEBUG$OFF 000000                            _RCREG 000FAE  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                     _Write_Config 0372  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            _frame 0060  
             __CFG_MCLRE$EXTMCLR 000000                   ?_EUSART1_Write 0002  
                          pclath 000FFA                            tablat 000FF5  
                  _Calc_Checksum 04C2                   ??_EUSART1_Read 0029  
                          status 000FD8                            wtemp6 003A  
                 __CFG_HFOFST$ON 000000                   __CFG_PBADEN$ON 000000  
                __initialization 05B2       __end_of_EUSART1_Initialize 060E  
                   __end_of_main 0680                           ??_main 0031  
                  __activetblptr 000002              __end_of_Read_Config 056E  
         ?_BOOTLOADER_Initialize 0002                           _EEADRH 000FAA  
                         _EEDATA 000FA8         __end_of_service_isr_high 02DE  
                         _EECON1 000FA6                           _EECON2 000FA7  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _ANSELD 000F3B  
                         _ANSELE 000F3C                   ?_Calc_Checksum 0002  
                         _TABLAT 000FF5                           _RCREG1 000FAE  
                         _RCSTA1 000FAB                           _OSCCON 000FD3  
                         _TBLPTR 000FF6                           _PLLRDY 007E97  
                         _SPBRG1 000FAF                           _STKPTR 000FFC  
                         _TXREG1 000FAD                           _TXSTA1 000FAC  
      __size_of_Get_Version_Data 0094                   __CFG_XINST$OFF 000000  
                    _Erase_Flash 045E                   __CFG_STVREN$ON 000000  
                         clear_0 05B8                           clear_1 05C4  
    __size_of_Check_Device_Reset 000A                ??_service_isr_low 0014  
                   Read_Config@i 002B                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                ??_EUSART1_Write 0029                       _StartWrite 0658  
              _SYSTEM_Initialize 0624                       __accesstop 0060  
        __end_of__initialization 05CA               ?_SYSTEM_Initialize 0002  
                  ___rparam_used 000001                   __pcstackCOMRAM 0002  
            ??_SYSTEM_Initialize 0031                      _Read_Config 051A  
           __end_of_EUSART1_Read 0658                  ??_Calc_Checksum 0029  
      __end_of_SYSTEM_Initialize 0636                       __pbssBANK0 0060  
                __CFG_PLLCFG$OFF 000000                     Write_Flash@i 002F  
             __CFG_CCP2MX$PORTC1 000000               __CFG_CCP3MX$PORTB5 000000  
                  ??_Write_Flash 0029                  __CFG_WDTEN$SWON 000000  
                        _OSCCON2 000FD2                          _TBLPTRH 000FF7  
                        _TBLPTRL 000FF6                          _TBLPTRU 000FF8  
                        _OSCTUNE 000F9B                          _SPBRGH1 000FB0  
                    ?_StartWrite 0002          __size_of_Run_Bootloader 00C8  
               _Get_Version_Data 02DE                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                        __pcinit 05B2                          __ramtop 1000  
        ??_BOOTLOADER_Initialize 0031                          __ptext0 067A  
                        __ptext1 0624                          __ptext2 056E  
                        __ptext3 0636                          __ptext4 05F8  
                        __ptext5 060E                          __ptext6 00CE  
                        __ptext7 03EA                          __ptext8 0196  
                        __ptext9 0372                          _counter 0031  
          _OSCILLATOR_Initialize 0636              __end_of_Write_Flash 0246  
             _EUSART1_Initialize 05F8         ??_PIN_MANAGER_Initialize 0029  
                        _rx_data 0037                          _tx_data 0036  
     __size_of_SYSTEM_Initialize 0012                   __pintcode_body 0246  
           end_of_initialization 05CA                ?_service_isr_high 0002  
            ?_EUSART1_Initialize 0002               ??_service_isr_high 0002  
                  __Lmediumconst 0000                          int_func 0246  
                _service_isr_low 0018                          postdec2 000FDD  
                   ?_Erase_Flash 0002                          postinc0 000FEE  
                        postinc2 000FDE            __size_of_EUSART1_Read 0010  
           ??_EUSART1_Initialize 0029              __size_of_StartWrite 000C  
            EUSART1_Write@txData 0029                     _EUSART1_Read 0648  
                   ?_Read_Config 0002       __end_of_Check_Device_Reset 067A  
                    _Write_Flash 0196                      _BAUDCONbits 000FB8  
         ?_OSCILLATOR_Initialize 0002              start_initialization 05B2  
__size_of_PIN_MANAGER_Initialize 0044            __end_of_EUSART1_Write 0670  
                 _Run_Bootloader 00CE          __end_of_service_isr_low 00CA  
              _Bootload_Required 05D8               ?_Bootload_Required 0002  
            ??_Bootload_Required 0029                    ?_Write_Config 0002  
       __end_of_Get_Version_Data 0372                      __pbssCOMRAM 0031  
                  __pcstackBANK0 00A9                      _data_length 0038  
                   ??_StartWrite 0029            __end_of_Calc_Checksum 051A  
         __end_of_Run_Bootloader 0196                    Write_Config@i 002B  
                      _check_sum 0033        __end_of_Bootload_Required 05F8  
         _PIN_MANAGER_Initialize 056E                        __pintcode 0008  
                    __pintcodelo 0018             __size_of_Erase_Flash 0064  
             __end_of_StartWrite 0664                 __CFG_PRICLKEN$ON 000000  
                 ??_Write_Config 0029   __size_of_BOOTLOADER_Initialize 0016  
  __end_of_BOOTLOADER_Initialize 0624                         _BAUDCON1 000FB8  
                ?_Run_Bootloader 0002                         _EE_Key_1 000000  
                       _EE_Key_2 000001                 ?_service_isr_low 0002  
                  _reset_pending 0035                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                 __CFG_WDTPS$32768 000000  
      __size_of_service_isr_high 02D6             __size_of_Read_Config 0054  
       Run_Bootloader@msg_length 00AA                      _INTCON2bits 000FF1  
           ProcessBootBuffer@len 0030                       _EECON1bits 000FA6  
     __size_of_Bootload_Required 0020                         __Hrparam 0000  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTD2 000000          ??_OSCILLATOR_Initialize 0029  
                   ?_Write_Flash 0002      __size_of_EUSART1_Initialize 0016  
             _Check_Device_Reset 0670                         __ptext10 051A  
                       __ptext11 02DE                         __ptext12 045E  
                       __ptext13 0658                         __ptext14 04C2  
                       __ptext15 0664                         __ptext16 0648  
                       __ptext17 0670                         __ptext18 05D8  
            ?_Check_Device_Reset 0002                    __size_of_main 0006  
               Run_Bootloader@ch 00A9             __end_of_Write_Config 03EA  
            Run_Bootloader@index 00AB                         int$flags 0039  
           ??_Check_Device_Reset 0029                _ProcessBootBuffer 03EA  
                     _INTCONbits 000FF2                Get_Version_Data@i 0029  
             ?_ProcessBootBuffer 0002                ?_Get_Version_Data 0002  
             ??_Get_Version_Data 0029                         intlevel1 0000  
            ??_ProcessBootBuffer 0030                         intlevel2 0000  
        ?_PIN_MANAGER_Initialize 0002                       _RCSTA1bits 000FAB  
               _service_isr_high 0008        __end_of_ProcessBootBuffer 045E  
         __size_of_EUSART1_Write 000C                     Erase_Flash@i 0029  
               ??_Run_Bootloader 0031                __CFG_T3CMX$PORTC0 000000  
 __end_of_PIN_MANAGER_Initialize 05B2                __CFG_FOSC$INTIO67 000000  
                 Calc_Checksum@i 0029  
